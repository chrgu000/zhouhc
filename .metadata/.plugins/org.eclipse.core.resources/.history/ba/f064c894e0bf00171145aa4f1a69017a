package cn.ak4j.yard.spd.bizrule.web;

import java.util.Arrays;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import cn.ak4j.entity.Entities;
import cn.ak4j.entity.query.param.OrderParam;
import cn.ak4j.yard.domain.Constant;
import cn.ak4j.yard.pcs.domain.PcsUser;
import cn.ak4j.yard.spd.bizrule.domain.SpdAdjustStockRule;
import cn.ak4j.yard.spd.bizrule.domain.SpdAdjustStockRules;
import cn.ak4j.yard.spd.bizrule.params.SpdAdjustStockRuleParams;
import cn.ak4j.yard.spd.bizrule.repository.SpdBizRuleRepository;
import cn.ak4j.yard.spd.bizrule.service.SpdBizRuleService;

@RestController
public class SpdAdjustStockRuleResource {
	
	@Autowired private SpdBizRuleRepository brRepository;
	@Autowired private SpdBizRuleService brService;

	@RequestMapping(value="/yard/spd/spdAdjustStockRules", method=RequestMethod.GET)
	public Entities<SpdAdjustStockRule> list(@RequestParam(value = "currentPage", required = false, defaultValue = "1") int currentPage,
			@RequestParam(value = "pageSize", required = false, defaultValue = "20") int pageSize,
			@RequestParam(value = "params", required = false) String paramsStr,
			@RequestParam(value = "orders", required = false) String orders){
		SpdAdjustStockRuleParams params = SpdAdjustStockRuleParams.buildParamsFromJson(paramsStr, SpdAdjustStockRuleParams.class);
		OrderParam order = OrderParam.buildFromJson(orders);
		SpdAdjustStockRules rules = brRepository.findAllWithRelations().getAllAdjustStockRules();
		
		return rules.findByPage(params, order, currentPage-1, pageSize);
	}
	
	@RequestMapping(value="/yard/spd/spdAdjustStockRules/count", method=RequestMethod.GET)
	public int count(@RequestParam(value = "params", required = false) String paramsStr){
		SpdAdjustStockRuleParams params = SpdAdjustStockRuleParams.buildParamsFromJson(paramsStr, SpdAdjustStockRuleParams.class);
		SpdAdjustStockRules rules = brRepository.findAllWithRelations().getAllAdjustStockRules();
		
		return rules.find(params).size();
	}
	
	@RequestMapping(value="/yard/spd/spdAdjustStockRules/{id}", method=RequestMethod.GET)
	public SpdAdjustStockRule get(@PathVariable("id")String id){
		return brRepository.findAllWithRelations().getAllAdjustStockRules().findById(id);
	}
	
	@RequestMapping(value="/yard/spd/spdAdjustStockRules/ids,{ids}", method=RequestMethod.GET)
	public Entities<SpdAdjustStockRule> getByIds(@PathVariable("ids")String ids){
		return brRepository.findAllWithRelations().getAllAdjustStockRules().findByIds(Arrays.asList(ids.split(",")));
	}
	
	@RequestMapping(value="/yard/spd/spdAdjustStockRules", method=RequestMethod.POST)
	public SpdAdjustStockRule add(@RequestBody SpdAdjustStockRule rule, HttpServletRequest request){
		PcsUser user = (PcsUser)request.getAttribute(Constant.user_attr_name);
		rule.setCreateTime(new Date());
		rule.setLastUpdateTime(new Date());
		rule = (SpdAdjustStockRule)brService.add(rule, user);
		rule = brRepository.findAllWithRelations().getAllAdjustStockRules().findById(rule.getId());
		return rule;
	}
	
	@RequestMapping(value="/yard/spd/spdAdjustStockRules/{id}", method=RequestMethod.PUT)
	public SpdAdjustStockRule modify(@RequestBody SpdAdjustStockRule rule, HttpServletRequest request){
		PcsUser user = (PcsUser)request.getAttribute(Constant.user_attr_name);
		rule = (SpdAdjustStockRule)brService.modify(rule, user);
		rule = brRepository.findAllWithRelations().getAllAdjustStockRules().findById(rule.getId());
		return rule;
	}
	
	@RequestMapping(value="/yard/spd/spdAdjustStockRules/whichICanApply", method = RequestMethod.GET)
	public Entities<SpdAdjustStockRule> whichICanApply(@RequestParam(value = "params", required = false) String paramsStr,
			@RequestParam(value = "orders", required = false) String orders,
			HttpServletRequest request){
		PcsUser user = (PcsUser)request.getAttribute(Constant.user_attr_name);
		SpdAdjustStockRuleParams params = SpdAdjustStockRuleParams.buildParamsFromJson(paramsStr, SpdAdjustStockRuleParams.class);
		OrderParam order = OrderParam.buildFromJson(orders);
		SpdAdjustStockRules rules = new SpdAdjustStockRules(brRepository.findAllWithRelations().getAllAdjustStockRules().whichCanApplyByUser(user));
	    
		return rules.findByPage(params, order, -1, -1);
	}
	
}
