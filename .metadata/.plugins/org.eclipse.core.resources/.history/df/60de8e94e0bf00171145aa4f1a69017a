package cn.ak4j.yard.spd.reconciliation.web;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import cn.ak4j.entity.query.param.ListParam;
import cn.ak4j.entity.query.param.OrderParam;
import cn.ak4j.yard.domain.Constant;
import cn.ak4j.yard.domain.IUser;
import cn.ak4j.yard.spd.reconciliation.domain.SpdFinacialReconciliationItem;
import cn.ak4j.yard.spd.reconciliation.domain.SpdFinacialReconciliationItems;
import cn.ak4j.yard.spd.reconciliation.params.SpdFinacialReconciliationItemParams;
import cn.ak4j.yard.spd.reconciliation.repository.SpdFinacialReconciliationItemRepository;
import cn.ak4j.yard.spd.reconciliation.service.SpdFinacialReconciliationBizService;
import cn.ak4j.yard.yds.repository.YdsGoodsRepository;

@RestController
public class SpdFinacialReconciliationItemResource {

	@Autowired private SpdFinacialReconciliationBizService frbService;
	@Autowired private SpdFinacialReconciliationItemRepository friRepository;
	@Autowired private YdsGoodsRepository goodsRepository;
	
	/**
	 * 只允许查看某个财务对账业务下的对账明细，其他的查看方式没有明确的业务意义
	 */
	@RequestMapping(value="/yard/spd/spdFinacialReconciliations/{reconciliationId}/items", method=RequestMethod.GET)
	public SpdFinacialReconciliationItems list(@RequestParam(value = "currentPage", required = false, defaultValue = "1") int currentPage,
			@RequestParam(value = "pageSize", required = false, defaultValue = "20") int pageSize,
			@RequestParam(value = "params", required = false) String paramsStr,
			@RequestParam(value = "orders", required = false) String orders,
			@PathVariable("reconciliationId")String reconciliationId){
		SpdFinacialReconciliationItemParams params = SpdFinacialReconciliationItemParams.buildParamsFromJson(paramsStr, SpdFinacialReconciliationItemParams.class);
		if(params == null){
			params = new SpdFinacialReconciliationItemParams();
		}
		params.setReconciliationId(new ListParam<String>(reconciliationId));
		
		OrderParam order = OrderParam.buildFromJson(orders);
		SpdFinacialReconciliationItems result = friRepository.find(params, order, currentPage-1, pageSize);
		result.fillGoods(goodsRepository);
		return result;
	}
	
	@RequestMapping(value="/yard/spd/spdFinacialReconciliations/{reconciliationId}/items/count", method=RequestMethod.GET)
	public int count(@RequestParam(value = "params", required = false) String paramsStr,
			@PathVariable("reconciliationId")String reconciliationId){
		SpdFinacialReconciliationItemParams params = SpdFinacialReconciliationItemParams.buildParamsFromJson(paramsStr, SpdFinacialReconciliationItemParams.class);
		if(params == null){
			params = new SpdFinacialReconciliationItemParams();
		}
		params.setReconciliationId(new ListParam<String>(reconciliationId));
		return friRepository.count(params);
	}
	
	@RequestMapping(value="/yard/spd/spdFinacialReconciliations/{reconciliationId}/items/{itemId}", method=RequestMethod.PUT)
	public SpdFinacialReconciliationItem modify(@RequestBody SpdFinacialReconciliationItem item, HttpServletRequest request){
		IUser user = (IUser)request.getAttribute(Constant.user_attr_name);
		item = frbService.modifyItem(item, user);
		item.setGoods(goodsRepository.findAll().findById(item.getGoodsId()));
		return item;
	}
	
}
