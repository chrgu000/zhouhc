package cn.ak4j.yard.spd.bizrule.web;

import java.util.Arrays;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import cn.ak4j.entity.Entities;
import cn.ak4j.entity.query.param.OrderParam;
import cn.ak4j.yard.pcs.domain.PcsUser;
import cn.ak4j.yard.spd.bizrule.domain.SpdFinacialReconciliationRule;
import cn.ak4j.yard.spd.bizrule.domain.SpdFinacialReconciliationRules;
import cn.ak4j.yard.spd.bizrule.params.SpdFinacialReconciliationRuleParams;
import cn.ak4j.yard.spd.bizrule.repository.SpdBizRuleRepository;
import cn.ak4j.yard.spd.bizrule.service.SpdBizRuleService;

@RestController
public class SpdFinacialReconciliationRuleResource {

	@Autowired private SpdBizRuleRepository brRepository;
	@Autowired private SpdBizRuleService brService;
	
	@RequestMapping(value="/yard/spd/spdFinacialReconciliationRules", method=RequestMethod.GET)
	public Entities<SpdFinacialReconciliationRule> list(@RequestParam(value = "currentPage", required = false, defaultValue = "1") int currentPage,
			@RequestParam(value = "pageSize", required = false, defaultValue = "20") int pageSize,
			@RequestParam(value = "params", required = false) String paramsStr,
			@RequestParam(value = "orders", required = false) String orders){
		SpdFinacialReconciliationRuleParams params = SpdFinacialReconciliationRuleParams.buildParamsFromJson(paramsStr, SpdFinacialReconciliationRuleParams.class);
		OrderParam order = OrderParam.buildFromJson(orders);
		SpdFinacialReconciliationRules rules = brRepository.findAllWithRelations().getAllFinacialReconciliationRules();
		return rules.findByPage(params, order, currentPage-1, pageSize);
	}
	
	@RequestMapping(value="/yard/spd/spdFinacialReconciliationRules/count", method=RequestMethod.GET)
	public int count(@RequestParam(value = "params", required = false) String paramsStr){
		SpdFinacialReconciliationRuleParams params = SpdFinacialReconciliationRuleParams.buildParamsFromJson(paramsStr, SpdFinacialReconciliationRuleParams.class);
		SpdFinacialReconciliationRules rules = brRepository.findAllWithRelations().getAllFinacialReconciliationRules();
		return rules.find(params).size();
	}
	
	@RequestMapping(value="/yard/spd/spdFinacialReconciliationRules/ids,{ids}", method=RequestMethod.GET)
	public Entities<SpdFinacialReconciliationRule> getByIds(@PathVariable("ids") String ids){
		SpdFinacialReconciliationRules rules = brRepository.findAllWithRelations().getAllFinacialReconciliationRules();
		return rules.findByIds(Arrays.asList(ids.split(",")));
	}
	
	@RequestMapping(value="/yard/spd/spdFinacialReconciliationRules", method = RequestMethod.POST)
	public SpdFinacialReconciliationRule add(@RequestBody SpdFinacialReconciliationRule rule, HttpServletRequest request){
		PcsUser user = (PcsUser)request.getAttribute("user");
		rule = (SpdFinacialReconciliationRule)brService.add(rule, user);
		rule = (SpdFinacialReconciliationRule)brRepository.findAllWithRelations().findById(rule.getId());
		
		return rule;
	}

	@RequestMapping(value="/yard/spd/spdFinacialReconciliationRules/{id}", method = RequestMethod.PUT)
	public SpdFinacialReconciliationRule update(@RequestBody SpdFinacialReconciliationRule rule, HttpServletRequest request){
		PcsUser user = (PcsUser)request.getAttribute("user");
		brService.modify(rule, user);
		rule = (SpdFinacialReconciliationRule)brRepository.findAllWithRelations().findById(rule.getId());
		
		return rule;
	}
	
	@RequestMapping(value="/yard/spd/spdFinacialReconciliationRules/{id}", method = RequestMethod.GET)
	public SpdFinacialReconciliationRule get(@PathVariable("id")String id){
		SpdFinacialReconciliationRule rule = (SpdFinacialReconciliationRule)brRepository.findAllWithRelations().findById(id);
		return rule;
	}
	
	@RequestMapping(value="/yard/spd/spdFinacialReconciliationRules/whichICanApply", method = RequestMethod.GET)
	public SpdFinacialReconciliationRules whichICanApply(@RequestParam(value = "params", required = false) String paramsStr,
			@RequestParam(value = "orders", required = false) String orders,HttpServletRequest request){
		SpdFinacialReconciliationRuleParams params = SpdFinacialReconciliationRuleParams.buildParamsFromJson(paramsStr, SpdFinacialReconciliationRuleParams.class);
		OrderParam order = OrderParam.buildFromJson(orders);
		PcsUser user = (PcsUser)request.getAttribute("user");
		SpdFinacialReconciliationRules rules = new SpdFinacialReconciliationRules(brRepository.findAllWithRelations().getAllFinacialReconciliationRules().whichCanApplyByUser(user));
		return new SpdFinacialReconciliationRules(rules.findByPage(params, order, -1, -1));
	}
	
}
