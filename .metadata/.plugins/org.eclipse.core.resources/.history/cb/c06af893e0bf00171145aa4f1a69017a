package cn.ak4j.yard.yds.web;

import java.util.Arrays;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import cn.ak4j.entity.query.param.OrderParam;
import cn.ak4j.entity.query.param.QueryParams;
import cn.ak4j.yard.yds.domain.YdsWorkBook;
import cn.ak4j.yard.yds.domain.YdsWorkBooks;
import cn.ak4j.yard.yds.params.YdsWorkBookParams;
import cn.ak4j.yard.yds.repository.YdsWorkBookRepository;

@RestController
public class YdsWorkBookResource {

	@Autowired private YdsWorkBookRepository wbRepository;

	@RequestMapping(value = "/yard/yds/ydsWorkBooks/{id}", method = RequestMethod.GET)
	public YdsWorkBook get(@PathVariable("id") String id) {
		return wbRepository.findAll().findById(id);
	}

	@RequestMapping(value = "/yard/yds/ydsWorkBooks", method = RequestMethod.GET)
	public YdsWorkBooks list(@RequestParam(value = "currentPage", required = false, defaultValue = "1") int currentPage,
			@RequestParam(value = "pageSize", required = false, defaultValue = "20") int pageSize,
			@RequestParam(value = "params", required = false) String paramsStr,
			@RequestParam(value = "orders", required = false) String orders) {
		YdsWorkBookParams params = QueryParams.buildParamsFromJson(paramsStr, YdsWorkBookParams.class);
		OrderParam order = OrderParam.buildFromJson(orders);
		YdsWorkBooks result = new YdsWorkBooks(
				wbRepository.findAll().findByPage(params, order, currentPage - 1, pageSize));
		return result;
	}

	@RequestMapping(value = "/yard/yds/ydsWorkBooks/count", method = RequestMethod.GET)
	public long count(@RequestParam(value = "params", required = false) String paramsStr) {
		YdsWorkBookParams params = QueryParams.buildParamsFromJson(paramsStr, YdsWorkBookParams.class);
		return wbRepository.findAll().find(params).size();
	}

	@RequestMapping(value = "/yard/yds/ydsWorkBooks/ids,{ids}", method = RequestMethod.GET)
	public YdsWorkBooks listByIds(@PathVariable(value = "ids", required = false) String ids) {
		return wbRepository.findAll().findByIds(Arrays.asList(ids.split(",")));
	}

	@RequestMapping(value = "/yard/yds/ydsWorkBooks/sortCode,{sortCode}", method = RequestMethod.GET)
	public YdsWorkBooks findBySortCode(@PathVariable("sortCode") String sortCode) {
		return wbRepository.findAll().findBySortCode(sortCode);
	}

}
