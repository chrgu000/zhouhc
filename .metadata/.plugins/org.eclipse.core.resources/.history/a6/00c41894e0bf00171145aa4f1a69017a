package cn.ak4j.yard.sys.web;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.io.IOUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import cn.ak4j.Global;
import cn.ak4j.yard.pcs.domain.PcsUser;
import cn.ak4j.yard.sys.domain.YardBatchTask;
import cn.ak4j.yard.sys.service.YardDataImportService;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RestController
public class YardDataImporterResource {

	@Autowired private YardDataImportService diService;
	
	@SuppressWarnings({"rawtypes" })
	@RequestMapping(value = "/yard/sys/batchImportDataTasks", method = RequestMethod.POST)
	public YardBatchTask uploadBatchTaskFile(HttpServletRequest request, @RequestParam("file") MultipartFile file, @RequestParam("dataType")String dataType) throws Exception{
		PcsUser user = (PcsUser)request.getAttribute("user");
		if(!file.isEmpty()){
            byte[] bytes = file.getBytes();
    		log.info("data import file size:{}, data type: {}", bytes.length, dataType);
    		YardBatchTask<List> batchTask = diService.createDataImportBatchTask(user, bytes, dataType);
    		return batchTask;
        } 
		return null;
	}
	
	@ResponseBody
	@RequestMapping(value="/yard/sys/dataImporterTemplates/{dataType}", method = RequestMethod.GET)
	public void downloadExcelTemplate(@PathVariable("dataType")String dataType, HttpServletResponse response) throws Exception{
		byte[] data = IOUtils.toByteArray(this.getClass().getResource("/xsltemplates/"+dataType+".xls"));
		
		response.reset();
		response.setContentType("application/vnd.ms-excel");
		response.setCharacterEncoding(Global.defaultCharset.name());
		response.setHeader("Content-Disposition", "attachment;filename=" + dataType+".xls");
		IOUtils.write(data, response.getOutputStream());
	}
	
}
