package cn.ak4j.yard.pcs.repository;

import java.util.List;

import javax.persistence.EntityManager;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Repository;

import cn.ak4j.entity.query.param.OrderParam;
import cn.ak4j.entity.repository.BaseRepository;
import cn.ak4j.yard.domain.Constant;
import cn.ak4j.yard.pcs.domain.PcsOrg;
import cn.ak4j.yard.pcs.domain.PcsOrgs;
import cn.ak4j.yard.pcs.params.PcsOrgParams;
import lombok.Getter;

@Repository
public class PcsOrgRepository extends BaseRepository<PcsOrg, PcsOrgs, PcsOrgParams, String>{

	@Autowired @Getter 
	private EntityManager entityManager;
	
	@Autowired @Lazy
	private PcsDeptRepository deptRepository;
	
	@Cacheable(value="longTimeCache", key="\"allPcsOrgs\"")
	public PcsOrgs findAll(){
		PcsOrgs orgs = super.getAll();
		//默认按主机构排序
		orgs = new PcsOrgs(orgs.findByPage(new PcsOrgParams(), new OrderParam("main", "desc"), -1, -1));
		return orgs;
	}

	@Deprecated
	public PcsOrgs find(PcsOrgParams params) {
		throw new UnsupportedOperationException(Constant.repository_method_not_support_msg);
	}
	
	@Deprecated
	public PcsOrgs find(PcsOrgParams params, OrderParam order, int pageNo, int pageSize){
		throw new UnsupportedOperationException(Constant.repository_method_not_support_msg);
	}

	@Deprecated
	public PcsOrgs findByIds(List<String> ids){
		throw new UnsupportedOperationException(Constant.repository_method_not_support_msg);
	}
	
	@Deprecated
	public PcsOrg findOne(String orgId) {
		throw new UnsupportedOperationException(Constant.repository_method_not_support_msg);
	}
	
	@Deprecated
	public int count(PcsOrgParams params){
		throw new UnsupportedOperationException(Constant.repository_method_not_support_msg);
	}
	
}
