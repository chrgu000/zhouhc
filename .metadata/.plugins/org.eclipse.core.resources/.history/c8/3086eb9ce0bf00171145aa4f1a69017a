CREATE TABLE "SYS_GLOBAL_INFO" 
   ("KEY" VARCHAR2(100 BYTE), 
    "NAME" VARCHAR2(100 BYTE),
	"VALUE"  VARCHAR2(4000 BYTE),
	"DESCRIPTION" VARCHAR2(300 BYTE),
	"CREATE_TIME" DATE NOT NULL ENABLE, 
	"LAST_UPDATE_TIME" DATE NOT NULL ENABLE, 
	"EDITABLE" CHAR(1 BYTE),
	 PRIMARY KEY ("KEY")
   );
COMMENT ON TABLE "SYS_GLOBAL_INFO"  IS '全局信息表';

CREATE TABLE "EIS_APPLY_SYNC_RESOURCE" 
   (	"ID" VARCHAR2(32 BYTE), 
	"EX_SYSTEM_CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"EX_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"SPD_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"CREATE_TIME" DATE NOT NULL ENABLE, 
	"LAST_UPDATE_TIME" DATE NOT NULL ENABLE, 
	"IGNORE_WARN" CHAR(1 BYTE),
	"SYNC_DESCRIPTION" VARCHAR2(4000 BYTE),
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "EIS_APPLY_SYNC_RESOURCE"  IS '调拨单同步资源';
   
CREATE TABLE EIS_USER_SYNC_RESOURCE
   (ID VARCHAR2(32 BYTE), 
	EX_SYSTEM_CODE VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	EX_RESOURCE_ID VARCHAR2(50 BYTE), 
	SPD_RESOURCE_ID VARCHAR2(50 BYTE), 
	CREATE_TIME DATE NOT NULL ENABLE, 
	LAST_UPDATE_TIME DATE NOT NULL ENABLE, 
	IGNORE_WARN CHAR(1 BYTE),
	SYNC_DESCRIPTION VARCHAR2(4000 BYTE),
	PRIMARY KEY (ID)
   );
COMMENT ON TABLE EIS_USER_SYNC_RESOURCE IS '用户同步资源';

CREATE TABLE "EIS_DEPOT_SYNC_RESOURCE" 
   (	"ID" VARCHAR2(32 BYTE), 
	"EX_SYSTEM_CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"EX_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"SPD_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"CREATE_TIME" DATE NOT NULL ENABLE, 
	"LAST_UPDATE_TIME" DATE NOT NULL ENABLE, 
	"IGNORE_WARN" CHAR(1 BYTE), 
	"SYNC_DESCRIPTION" VARCHAR2(4000 BYTE),
	 PRIMARY KEY ("ID")
   ) ;
COMMENT ON TABLE "EIS_DEPOT_SYNC_RESOURCE"  IS '仓库同步资源';
 
CREATE TABLE "EIS_DEPT_SYNC_RESOURCE" 
   (	"ID" VARCHAR2(32 BYTE), 
	"EX_SYSTEM_CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"EX_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"SPD_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"CREATE_TIME" DATE NOT NULL ENABLE, 
	"LAST_UPDATE_TIME" DATE NOT NULL ENABLE, 
	"IGNORE_WARN" CHAR(1 BYTE), 
	"SYNC_DESCRIPTION" VARCHAR2(4000 BYTE),
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "EIS_DEPT_SYNC_RESOURCE"  IS '部门同步资源';

CREATE TABLE "EIS_GOODS_LOT_SYNC_RESOURCE" 
   (	"ID" VARCHAR2(32 BYTE), 
	"EX_SYSTEM_CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"EX_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"SPD_RESOURCE_ID" VARCHAR2(100 BYTE), 
	"CREATE_TIME" DATE NOT NULL ENABLE, 
	"LAST_UPDATE_TIME" DATE NOT NULL ENABLE, 
	"IGNORE_WARN" CHAR(1 BYTE), 
	"SYNC_DESCRIPTION" VARCHAR2(4000 BYTE),
	 PRIMARY KEY ("ID")
);
COMMENT ON TABLE "EIS_GOODS_LOT_SYNC_RESOURCE"  IS '产品批次同步资源';
 
CREATE TABLE "EIS_GOODS_SYNC_RESOURCE" 
   (	"ID" VARCHAR2(32 BYTE), 
	"EX_SYSTEM_CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"EX_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"SPD_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"CREATE_TIME" DATE NOT NULL ENABLE, 
	"LAST_UPDATE_TIME" DATE NOT NULL ENABLE, 
	"IGNORE_WARN" CHAR(1 BYTE), 
	"SYNC_DESCRIPTION" VARCHAR2(4000 BYTE),
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "EIS_GOODS_SYNC_RESOURCE"  IS '标准产品同步资源';

CREATE TABLE EIS_EDS_GOODS_SYNC_RESOURCE
   ( ID VARCHAR2(32 BYTE), 
	EX_SYSTEM_CODE VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	EX_RESOURCE_ID VARCHAR2(50 BYTE), 
	SPD_RESOURCE_ID VARCHAR2(50 BYTE), 
	CREATE_TIME DATE NOT NULL ENABLE, 
	LAST_UPDATE_TIME DATE NOT NULL ENABLE, 
	IGNORE_WARN CHAR(1 BYTE),
	SYNC_DESCRIPTION VARCHAR2(4000 BYTE),
	PRIMARY KEY (ID)
   );
COMMENT ON TABLE EIS_EDS_GOODS_SYNC_RESOURCE  IS '企业产品同步资源';

CREATE TABLE "EIS_RECEIVE_SYNC_RESOURCE" 
   ("ID" VARCHAR2(32 BYTE), 
	"EX_SYSTEM_CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"EX_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"SPD_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"CREATE_TIME" DATE NOT NULL ENABLE, 
	"LAST_UPDATE_TIME" DATE NOT NULL ENABLE, 
	"IGNORE_WARN" CHAR(1 BYTE), 
	"SYNC_DESCRIPTION" VARCHAR2(4000 BYTE),
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "EIS_RECEIVE_SYNC_RESOURCE"  IS '收货单同步资源';
 
CREATE TABLE "EIS_SUPPLIER_SYNC_RESOURCE" 
   ("ID" VARCHAR2(32 BYTE), 
	"EX_SYSTEM_CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"EX_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"SPD_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"CREATE_TIME" DATE NOT NULL ENABLE, 
	"LAST_UPDATE_TIME" DATE NOT NULL ENABLE, 
	"IGNORE_WARN" CHAR(1 BYTE), 
	"SYNC_DESCRIPTION" VARCHAR2(4000 BYTE),
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "EIS_SUPPLIER_SYNC_RESOURCE"  IS '供应商同步资源';
 
CREATE TABLE "EIS_SYNC_REPORT" 
   ("ID" VARCHAR2(32 BYTE), 
	"EX_SYSTEM_CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"RESOURCE_TYPE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"EXECUTE_TYPE" NUMBER(*,0), 
	"ALTERATION_COUNT" NUMBER(10,0), 
	"CREATE_TIME" DATE, 
	"COMPLETE_TIME" DATE, 
	"ERRORS_COUNT" NUMBER(10,0), 
	"WARNS_COUNT" NUMBER(10,0), 
	"MIXED_DESCRIPTION" CLOB, 
	 PRIMARY KEY ("ID")
   );
COMMENT ON COLUMN "EIS_SYNC_REPORT"."EX_SYSTEM_CODE" IS '外部系统编码';
COMMENT ON COLUMN "EIS_SYNC_REPORT"."RESOURCE_TYPE" IS '资源类型'; 
COMMENT ON COLUMN "EIS_SYNC_REPORT"."EXECUTE_TYPE" IS '执行类型，0为定时触发执行，1为AMQP消息触发执行';
COMMENT ON TABLE "EIS_SYNC_REPORT"  IS '同步资源';

CREATE TABLE "EIS_USED_SYNC_RESOURCE" 
   ("ID" VARCHAR2(32 BYTE), 
	"EX_SYSTEM_CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"EX_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"SPD_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"CREATE_TIME" DATE NOT NULL ENABLE, 
	"LAST_UPDATE_TIME" DATE NOT NULL ENABLE, 
	"IGNORE_WARN" CHAR(1 BYTE), 
	"SYNC_DESCRIPTION" VARCHAR2(4000 BYTE),
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "EIS_USED_SYNC_RESOURCE"  IS '消耗单同步资源';
 
CREATE TABLE "EIS_USED_TYPE_SYNC_RESOURCE" 
   ("ID" VARCHAR2(32 BYTE), 
	"EX_SYSTEM_CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"EX_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"SPD_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"CREATE_TIME" DATE NOT NULL ENABLE, 
	"LAST_UPDATE_TIME" DATE NOT NULL ENABLE, 
	"IGNORE_WARN" CHAR(1 BYTE), 
	"SYNC_DESCRIPTION" VARCHAR2(4000 BYTE),
	 PRIMARY KEY ("ID")
);
COMMENT ON TABLE "EIS_USED_TYPE_SYNC_RESOURCE"  IS '消耗类型同步资源';
 
CREATE TABLE "EIS_WORKBOOK_SYNC_RESOURCE" 
   ("ID" VARCHAR2(32 BYTE), 
	"EX_SYSTEM_CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"EX_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"SPD_RESOURCE_ID" VARCHAR2(50 BYTE), 
	"CREATE_TIME" DATE NOT NULL ENABLE, 
	"LAST_UPDATE_TIME" DATE NOT NULL ENABLE, 
	"IGNORE_WARN" CHAR(1 BYTE), 
	"SYNC_DESCRIPTION" VARCHAR2(4000 BYTE),
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "EIS_WORKBOOK_SYNC_RESOURCE"  IS '字典数据同步资源';

CREATE TABLE EIS_RETURN_GOODS_SYNC_RESOURCE
   ( ID VARCHAR2(32 BYTE), 
	EX_SYSTEM_CODE VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	EX_RESOURCE_ID VARCHAR2(50 BYTE), 
	SPD_RESOURCE_ID VARCHAR2(50 BYTE), 
	CREATE_TIME DATE NOT NULL ENABLE, 
	LAST_UPDATE_TIME DATE NOT NULL ENABLE, 
	IGNORE_WARN CHAR(1 BYTE),
	SYNC_DESCRIPTION VARCHAR2(4000 BYTE),
	PRIMARY KEY (ID)
   );
COMMENT ON TABLE EIS_RETURN_GOODS_SYNC_RESOURCE  IS '备货退货同步资源';

CREATE TABLE EIS_ITEM_RELATION
   ( ID VARCHAR2(32 BYTE), 
    RESOURCE_TYPE VARCHAR2(50 BYTE),
	EX_RESOURCE_ID VARCHAR2(50 BYTE), 
	SPD_RESOURCE_ID VARCHAR2(50 BYTE),
	EX_ITEM_ID VARCHAR2(50 BYTE), 
	SPD_ITEM_ID VARCHAR2(50 BYTE),
	PRIMARY KEY (ID)
   );
COMMENT ON TABLE EIS_ITEM_RELATION  IS '同步资源明细关联';
 
CREATE SEQUENCE logging_event_id_seq MINVALUE 1 START WITH 1;

CREATE TABLE "LOGGING_EVENT" 
   (	"TIMESTMP" NUMBER(20,0) NOT NULL ENABLE, 
	"FORMATTED_MESSAGE" CLOB, 
	"LOGGER_NAME" VARCHAR2(254 BYTE) NOT NULL ENABLE, 
	"LEVEL_STRING" VARCHAR2(254 BYTE) NOT NULL ENABLE, 
	"THREAD_NAME" VARCHAR2(254 BYTE), 
	"REFERENCE_FLAG" NUMBER(*,0), 
	"ARG0" VARCHAR2(254 BYTE), 
	"ARG1" VARCHAR2(254 BYTE), 
	"ARG2" VARCHAR2(254 BYTE), 
	"ARG3" VARCHAR2(254 BYTE), 
	"CALLER_FILENAME" VARCHAR2(254 BYTE) NOT NULL ENABLE, 
	"CALLER_CLASS" VARCHAR2(254 BYTE) NOT NULL ENABLE, 
	"CALLER_METHOD" VARCHAR2(254 BYTE) NOT NULL ENABLE, 
	"CALLER_LINE" CHAR(4 BYTE) NOT NULL ENABLE, 
	"EVENT_ID" NUMBER(10,0), 
	 PRIMARY KEY ("EVENT_ID")
 ) ;
 
 CREATE OR REPLACE TRIGGER "LOGGING_EVENT_ID_SEQ_TRIG" 
  BEFORE INSERT ON logging_event
  FOR EACH ROW  
  BEGIN  
    SELECT logging_event_id_seq.NEXTVAL 
    INTO   :NEW.event_id 
    FROM   DUAL;  
  END;
/
ALTER TRIGGER "LOGGING_EVENT_ID_SEQ_TRIG" ENABLE;
 
 CREATE TABLE "LOGGING_EVENT_EXCEPTION" 
   (	"EVENT_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"I" NUMBER(*,0) NOT NULL ENABLE, 
	"TRACE_LINE" VARCHAR2(254 BYTE) NOT NULL ENABLE, 
	 PRIMARY KEY ("EVENT_ID", "I") ENABLE,
	 FOREIGN KEY ("EVENT_ID") REFERENCES "LOGGING_EVENT" ("EVENT_ID") ENABLE
   );
 
 
CREATE TABLE "LOGGING_EVENT_PROPERTY" 
   (	"EVENT_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"MAPPED_KEY" VARCHAR2(254 BYTE) NOT NULL ENABLE, 
	"MAPPED_VALUE" VARCHAR2(1024 BYTE), 
	 PRIMARY KEY ("EVENT_ID", "MAPPED_KEY")
   );
 
  
CREATE TABLE "PCS_DEPOT" 
   (	"DEPOT_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"DEPOT_TYPE" CHAR(1 BYTE), 
	"MANAGE_ORG_ID" VARCHAR2(100 BYTE), 
	"MANAGE_DEPT_ID" VARCHAR2(100 BYTE), 
	"IS_CENTRAL" CHAR(1 BYTE), 
	"IS_FIXED" CHAR(1 BYTE), 
	"DEPOT_NAME" VARCHAR2(150 BYTE) NOT NULL ENABLE, 
	"DEPOT_CODE" VARCHAR2(150 BYTE) NOT NULL ENABLE, 
	"DEPOT_ADDRESS" VARCHAR2(500 BYTE), 
	"LINK_MAN" VARCHAR2(500 BYTE), 
	"LINK_TEL" VARCHAR2(500 BYTE), 
	"ENABLED" CHAR(1 BYTE) NOT NULL ENABLE, 
	"YARD_ID" NUMBER(*,0), 
	"CHECK_STATE_CODE" NUMBER(*,0), 
	"CREATE_USER" VARCHAR2(100 BYTE), 
	"CREATE_DATE" DATE, 
	"CREATE_ORG" VARCHAR2(100 BYTE), 
	"LAST_USER" VARCHAR2(100 BYTE), 
	"LAST_DATE" DATE, 
	"LAST_ORG" VARCHAR2(100 BYTE), 
	"SYNC_DATE" DATE, 
	"CLEAN_DATE" DATE, 
	"DESCRIBE" VARCHAR2(500 BYTE),
	"GOODS_TYPE" VARCHAR2(50 BYTE),
	 PRIMARY KEY ("DEPOT_ID")
   );
COMMENT ON COLUMN "PCS_DEPOT"."DEPOT_TYPE" IS '1:普通仓库 2:智能设备';
COMMENT ON TABLE "PCS_DEPOT"  IS '仓库表';
 
CREATE TABLE "PCS_DEPOT_AREA" 
   (	"AREA_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"DEPOT_ID" VARCHAR2(100 BYTE), 
	"AREA_CODE" VARCHAR2(100 BYTE), 
	"AREA_NAME" VARCHAR2(100 BYTE), 
	"AREA_TYPE" VARCHAR2(100 BYTE), 
	"LINK_MAN" VARCHAR2(500 BYTE), 
	"LINK_TEL" VARCHAR2(500 BYTE), 
	"YARD_ID" NUMBER(*,0), 
	"CHECK_STATE_CODE" NUMBER(*,0), 
	"CREATE_USER" VARCHAR2(100 BYTE), 
	"CREATE_DATE" DATE, 
	"CREATE_ORG" VARCHAR2(100 BYTE), 
	"LAST_USER" VARCHAR2(100 BYTE), 
	"LAST_DATE" DATE, 
	"LAST_ORG" VARCHAR2(100 BYTE), 
	"DESCRIBE" VARCHAR2(500 BYTE),
	"PRIMARY" CHAR(1 BYTE),
	 PRIMARY KEY ("AREA_ID")
   );


CREATE TABLE "PCS_DEPOT_SHELF" 
   ("SHELF_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"AREA_ID" VARCHAR2(100 BYTE), 
	"SHELF_CODE" VARCHAR2(100 BYTE), 
	"SHELF_NAME" VARCHAR2(100 BYTE), 
	"STORE_TYPE" VARCHAR2(20 BYTE), 
	"MIXED_GOODS" CHAR(1 BYTE), 
	"MIXED_BATCH" CHAR(1 BYTE), 
	"ENABLED" CHAR(1 BYTE) DEFAULT '0' NOT NULL ENABLE, 
	"DEPOT_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"YARD_ID" NUMBER(*,0), 
	"CHECK_STATE_CODE" NUMBER(*,0), 
	"CREATE_USER" VARCHAR2(100 BYTE), 
	"CREATE_DATE" DATE, 
	"CREATE_ORG" VARCHAR2(100 BYTE), 
	"LAST_USER" VARCHAR2(100 BYTE), 
	"LAST_DATE" DATE,  
	"LAST_ORG" VARCHAR2(100 BYTE), 
	"DESCRIBE" VARCHAR2(500 BYTE), 
	"INX" NUMBER(10,0),
	"PRIMARY" CHAR(1 BYTE),
	 PRIMARY KEY ("SHELF_ID")
   ); 
COMMENT ON COLUMN "PCS_DEPOT_SHELF"."ENABLED" IS '禁用标记';
COMMENT ON TABLE "PCS_DEPOT_SHELF"  IS '仓库货位表';
 
 
CREATE TABLE "PCS_DEPT" 
   (	"DEPT_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"PARENT_ID" VARCHAR2(100 BYTE), 
	"ORG_ID" VARCHAR2(100 BYTE), 
	"DEPT_NAME" VARCHAR2(150 BYTE) NOT NULL ENABLE, 
	"DEPT_CODE" VARCHAR2(150 BYTE) NOT NULL ENABLE, 
	"DEPT_TYPE" VARCHAR2(50), 
	"IS_MAIN_FLAG" CHAR(1 BYTE), 
	"YARD_ID" NUMBER(*,0), 
	"CHECK_STATE_CODE" NUMBER(*,0), 
	"ENABLED" CHAR(1 BYTE) DEFAULT 0 NOT NULL ENABLE, 
	"CREATE_USER" VARCHAR2(100 BYTE), 
	"CREATE_DATE" DATE,  
	"CREATE_ORG" VARCHAR2(100 BYTE), 
	"LAST_USER" VARCHAR2(100 BYTE), 
	"LAST_DATE" DATE, 
	"LAST_ORG" VARCHAR2(100 BYTE),
	"DESCRIBE" VARCHAR2(500 BYTE), 
	"DEFAULT_USER_ID" VARCHAR2(50 BYTE),
	 PRIMARY KEY ("DEPT_ID")
   );
COMMENT ON COLUMN "PCS_DEPT"."PARENT_ID" IS '父部门ID'; 
COMMENT ON COLUMN "PCS_DEPT"."DEPT_NAME" IS '部门名称'; 
COMMENT ON COLUMN "PCS_DEPT"."DEPT_CODE" IS '部门编码'; 
COMMENT ON COLUMN "PCS_DEPT"."DEPT_TYPE" IS '类型：1 业务管理部门 2 仓库管理部门'; 
COMMENT ON COLUMN "PCS_DEPT"."IS_MAIN_FLAG" IS 'IS 主部门';


CREATE TABLE "PCS_ORG" 
   (	"ORG_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"USER_COUNT" NUMBER(*,0) NOT NULL ENABLE, 
	"ORG_CODE" VARCHAR2(150 BYTE) NOT NULL ENABLE, 
	"ORG_NAME" VARCHAR2(150 BYTE) NOT NULL ENABLE, 
	"ORG_ABBR" VARCHAR2(150 BYTE), 
	"ORG_BUS_NO" VARCHAR2(100 BYTE), 
	"ORG_REG_NO" VARCHAR2(100 BYTE), 
	"ORG_TAX_NO" VARCHAR2(100 BYTE), 
	"ORG_C_ADDRESS" VARCHAR2(150 BYTE), 
	"ORG_O_ADDRESS" VARCHAR2(150 BYTE), 
	"ORG_TYPE_NAME" VARCHAR2(100 BYTE), 
	"ORG_LEGAL" VARCHAR2(100 BYTE), 
	"ORG_SCOPE" VARCHAR2(150 BYTE), 
	"ORG_CREATE_DATE" DATE, 
	"ORG_EXP_DATE" DATE, 
	"IS_SALER_FLAG" CHAR(1 BYTE), 
	"IS_BUYER_FLAG" CHAR(1 BYTE), 
	"IS_STORAGE_FLAG" CHAR(1 BYTE), 
	"IS_TRANS_FLAG" CHAR(1 BYTE), 
	"IS_AGENT_FLAG" CHAR(1 BYTE), 
	"IS_GOV_FLAG" CHAR(1 BYTE), 
	"IS_BANK_FLAG" CHAR(1 BYTE), 
	"IS_MAIN_FLAG" CHAR(1 BYTE), 
	"ENABLED" CHAR(1 BYTE) DEFAULT '0' NOT NULL ENABLE, 
	"YARD_ID" NUMBER(*,0), 
	"CHECK_STATE_CODE" NUMBER(*,0), 
	"CREATE_USER" VARCHAR2(100 BYTE), 
	"CREATE_DATE" DATE,  
	"CREATE_ORG" VARCHAR2(100 BYTE), 
	"LAST_USER" VARCHAR2(100 BYTE), 
	"LAST_DATE" DATE, 
	"LAST_ORG" VARCHAR2(100 BYTE),
	"DESCRIBE" VARCHAR2(500 BYTE), 
	 CONSTRAINT "CKC_DISABLED_PCS_ORG" CHECK ("ENABLED" IS NULL OR "ENABLED"='1' OR "ENABLED"='0') ENABLE NOVALIDATE, 
	 PRIMARY KEY ("ORG_ID")
   );
COMMENT ON COLUMN "PCS_ORG"."USER_COUNT" IS '允许帐户个数'; 
COMMENT ON COLUMN "PCS_ORG"."ORG_CODE" IS '企业编码';
COMMENT ON COLUMN "PCS_ORG"."ORG_NAME" IS '企业名称';
COMMENT ON COLUMN "PCS_ORG"."ORG_BUS_NO" IS '营业执照注册号';
COMMENT ON COLUMN "PCS_ORG"."ORG_REG_NO" IS '组织机构代码号';
COMMENT ON COLUMN "PCS_ORG"."ORG_TAX_NO" IS '税务登记号';
COMMENT ON COLUMN "PCS_ORG"."ORG_C_ADDRESS" IS '注册地址';
COMMENT ON COLUMN "PCS_ORG"."ORG_O_ADDRESS" IS '办公地址';
COMMENT ON COLUMN "PCS_ORG"."ORG_TYPE_NAME" IS '企业类型 ：字典选择';
COMMENT ON COLUMN "PCS_ORG"."ORG_LEGAL" IS '法人代表';
COMMENT ON COLUMN "PCS_ORG"."ORG_SCOPE" IS '经营范围';
COMMENT ON COLUMN "PCS_ORG"."ORG_CREATE_DATE" IS '注册日期';
COMMENT ON COLUMN "PCS_ORG"."ORG_EXP_DATE" IS '注册证有效期';
COMMENT ON COLUMN "PCS_ORG"."IS_SALER_FLAG" IS 'IS 卖方';
COMMENT ON COLUMN "PCS_ORG"."IS_BUYER_FLAG" IS 'IS 买方';
COMMENT ON COLUMN "PCS_ORG"."IS_STORAGE_FLAG" IS 'IS 仓储';
COMMENT ON COLUMN "PCS_ORG"."IS_TRANS_FLAG" IS 'IS 物流';
COMMENT ON COLUMN "PCS_ORG"."IS_AGENT_FLAG" IS 'IS 代理';
COMMENT ON COLUMN "PCS_ORG"."IS_GOV_FLAG" IS 'IS 政府';
COMMENT ON COLUMN "PCS_ORG"."IS_BANK_FLAG" IS 'IS 银行';
COMMENT ON COLUMN "PCS_ORG"."IS_MAIN_FLAG" IS 'IS 应用场主机构';
COMMENT ON COLUMN "PCS_ORG"."ENABLED" IS '禁用标记';
COMMENT ON COLUMN "PCS_ORG"."CHECK_STATE_CODE" IS '0 ：新增 1 :  提交 2 ：审核 3 ：完成';
COMMENT ON TABLE "PCS_ORG"  IS '机构表唯一运营类型：ID为整形（自增序列）；其他新增机构为 varchar(100)  【SYS_GUID()生成】';
 

CREATE TABLE "PCS_ROLE" 
   (	"ROLE_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"ROLE_CODE" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"ROLE_NAME" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"ICON" VARCHAR2(100 BYTE), 
	"SORT" NUMBER(*,0), 
	"YARD_ID" NUMBER(*,0), 
	"CHECK_STATE_CODE" NUMBER(*,0), 
	"CREATE_USER" VARCHAR2(100 BYTE), 
	"CREATE_DATE" DATE, 
	"CREATE_ORG" VARCHAR2(100 BYTE), 
	"LAST_USER" VARCHAR2(100 BYTE), 
	"LAST_DATE" DATE, 
	"LAST_ORG" VARCHAR2(100 BYTE),
	"DESCRIBE" VARCHAR2(500 BYTE), 
	 PRIMARY KEY ("ROLE_ID")
   );
 

CREATE TABLE "PCS_ROLE_OP" 
   (	"ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"ROLE_ID" VARCHAR2(100 BYTE), 
	"FUNCTION_ID" VARCHAR2(100 BYTE), 
	"OP_ID" VARCHAR2(100 BYTE), 
	"YARD_ID" NUMBER(*,0), 
	"CHECK_STATE_CODE" NUMBER(*,0), 
	"CREATE_USER" VARCHAR2(100 BYTE), 
	"CREATE_DATE" DATE, 
	"CREATE_ORG" VARCHAR2(100 BYTE), 
	"LAST_USER" VARCHAR2(100 BYTE), 
	"LAST_DATE" DATE, 
	"LAST_ORG" VARCHAR2(100 BYTE),
	"DESCRIBE" VARCHAR2(500 BYTE), 
	 PRIMARY KEY ("ID")
   );


CREATE TABLE "PCS_USER" 
   (	"USER_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"DEPT_ID" VARCHAR2(100 BYTE), 
	"ORG_ID" VARCHAR2(100 BYTE), 
	"PASSWORD" VARCHAR2(150 BYTE), 
	"USER_NAME" VARCHAR2(150 BYTE) NOT NULL ENABLE, 
	"USER_CODE" VARCHAR2(150 BYTE) NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(150 BYTE), 
	"GENDER" VARCHAR2(2 BYTE), 
	"ENABLED" CHAR(1 BYTE) DEFAULT '0', 
	"YARD_ID" NUMBER(*,0), 
	"CHECK_STATE_CODE" NUMBER(*,0), 
	"CREATE_USER" VARCHAR2(100 BYTE), 
	"CREATE_DATE" DATE, 
	"CREATE_ORG" VARCHAR2(100 BYTE), 
	"LAST_USER" VARCHAR2(100 BYTE), 
	"LAST_DATE" DATE, 
	"LAST_ORG" VARCHAR2(100 BYTE),
	"DESCRIBE" VARCHAR2(500 BYTE), 
	"LAST_LOGIN_TIME" DATE, 
	"LAST_LOGIN_YARD_ID" NUMBER(*,0), 
	"LINK_TEL" VARCHAR2(100 BYTE), 
	"PRIMARY" CHAR(1 BYTE),
	"CUSTOM_STYLE" VARCHAR2(2500 BYTE),
	 CONSTRAINT "CKC_DISABLED_PCS_USER" CHECK ("ENABLED" IS NULL OR "ENABLED"='1' OR "ENABLED"='0') ENABLE NOVALIDATE, 
	 PRIMARY KEY ("USER_ID")
   );
COMMENT ON COLUMN "PCS_USER"."PASSWORD" IS '允许帐户个数';
COMMENT ON COLUMN "PCS_USER"."USER_NAME" IS '企业名称';
COMMENT ON COLUMN "PCS_USER"."USER_CODE" IS '企业编码';
COMMENT ON COLUMN "PCS_USER"."ENABLED" IS '禁用标记';
COMMENT ON COLUMN "PCS_USER"."CHECK_STATE_CODE" IS '0 ：新增 1 :  提交 2 ：审核 3 ：完成';
COMMENT ON TABLE "PCS_USER"  IS '用户表';
 

CREATE TABLE "PCS_USER_ROLE" 
   (	"ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"USER_ID" VARCHAR2(100 BYTE), 
	"ROLE_ID" VARCHAR2(100 BYTE), 
	"YARD_ID" NUMBER(*,0), 
	"CHECK_STATE_CODE" NUMBER(*,0), 
	"CREATE_USER" VARCHAR2(100 BYTE), 
	"CREATE_DATE" DATE, 
	"CREATE_ORG" VARCHAR2(100 BYTE), 
	"LAST_USER" VARCHAR2(100 BYTE), 
	"LAST_DATE" DATE, 
	"LAST_ORG" VARCHAR2(100 BYTE),
	"DESCRIBE" VARCHAR2(500 BYTE), 
	 PRIMARY KEY ("ID")
);
 
CREATE TABLE "PCS_USER_TOKEN" 
   ("ID" VARCHAR2(100 BYTE) NOT NULL ENABLE,
    "USER_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"RANDOM_CODE" VARCHAR2(100 BYTE), 
	"REFRESH_LASTTIME" DATE, 
	"CLIENT_TYPE" VARCHAR2(20 BYTE) default 'spd_web' NOT NULL ,
	"YARD_ID" VARCHAR2(100 BYTE), 
	 PRIMARY KEY ("ID")
   ) ;
 

CREATE TABLE "SYS_BATCH_TASK" 
   (	"ID" VARCHAR2(100 BYTE), 
	"TASK_TYPE" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"TASK_STATUS" VARCHAR2(20 BYTE), 
	"NOTIFY_URL" VARCHAR2(500 BYTE), 
	"CREATOR_ID" VARCHAR2(100 BYTE), 
	"CREATE_TIME" DATE, 
	"JSON" CLOB, 
	"CHECKSUM" VARCHAR2(32 BYTE), 
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "SYS_BATCH_TASK"  IS '批量任务表';


CREATE TABLE "SYS_CODE_SEQUENCE" 
   (	"SORT_CODE" VARCHAR2(4 BYTE), 
	"SORT_CODE_NAME" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"SEQUENCE" NUMBER(*,0), 
	"LAST_UPDATE_TIME" DATE, 
	 PRIMARY KEY ("SORT_CODE")
   );
COMMENT ON TABLE "SYS_CODE_SEQUENCE"  IS '系统编码序列表';


CREATE TABLE "SYS_DATA_CHECK_TASK" 
   (	"ID" VARCHAR2(100 BYTE), 
	"OPERATOR_ID" VARCHAR2(100 BYTE), 
	"START_TIME" DATE, 
	"END_TIME" DATE, 
	"STATUS" VARCHAR2(50 BYTE), 
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "SYS_DATA_CHECK_TASK"  IS '数据检查任务';

CREATE TABLE "SYS_DATA_CHECK_TASK_ITEM" 
   (	"ID" VARCHAR2(100 BYTE), 
	"TASK_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"REPORT_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"CLASS_NAME" VARCHAR2(100 BYTE), 
	"DATA_ID" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(500 BYTE), 
	"SEVERITY_LEVEL" VARCHAR2(30 BYTE), 
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "SYS_DATA_CHECK_TASK_ITEM"  IS '数据检查任务明细';
 
 
CREATE TABLE "SYS_DATA_CHECK_TASK_REPORT" 
   (	"ID" VARCHAR2(100 BYTE), 
	"TASK_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"CHECK_DATA_COUNT" NUMBER(10,0), 
	"ERROR_DATA_COUNT" NUMBER(10,0), 
	"WARN_DATA_COUNT" NUMBER(10,0), 
	"DATA_TYPE_COUNT" NUMBER(10,0), 
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "SYS_DATA_CHECK_TASK_REPORT"  IS '数据检查报告';

CREATE TABLE "SYS_DATA_CHECK_TYPE" 
   (	"ID" VARCHAR2(100 BYTE), 
	"CLASS_NAME" VARCHAR2(100 BYTE), 
	"CLASS_TYPE" VARCHAR2(50 BYTE), 
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "SYS_DATA_CHECK_TYPE"  IS '数据检查类型';

CREATE TABLE "YDS_EDS_GOODS" 
   (	"EDS_GOODS_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"EDS_GOODS_TYPE" VARCHAR2(50 BYTE),
	"EDS_WARE_NAME" VARCHAR2(200 BYTE), 
	"EDS_GOODS_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"EDS_GOODS_CODE" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"EDS_GOODS_SPEC" VARCHAR2(200 BYTE), 
	"EDS_GOODS_MODEL" VARCHAR2(200 BYTE), 
	"EDS_GOODS_DESC" VARCHAR2(2000 BYTE), 
	"EDS_PACKING_SPEC" VARCHAR2(200 BYTE), 
	"DELIVERY_UNIT_NAME" VARCHAR2(200 BYTE),
	"EDS_REG_DOC" VARCHAR2(200 BYTE), 
	"EDS_ATH_DOC" VARCHAR2(200 BYTE), 
	"EDS_FACT_NAME" VARCHAR2(200 BYTE), 
	"EDS_YDS_UNIT_RATIO" NUMBER(*,0), 
	"EDS_PRICE" NUMBER(20,4), 
	"EDS_M_CODE" VARCHAR2(100 BYTE), 
	"EDS_GOODS_FORMAT_NAME" VARCHAR2(1000 BYTE), 
	"YARD_GOODS_ID" VARCHAR2(100 BYTE), 
	"OWNER_ORG_ID" VARCHAR2(100 BYTE), 
	"ENABLED" CHAR(1 BYTE) DEFAULT '0', 
	"YARD_ID" NUMBER(*,0), 
	"CHECK_STATE_CODE" NUMBER(*,0), 
	"CREATE_USER" VARCHAR2(100 BYTE), 
	"CREATE_ORG" VARCHAR2(100 BYTE), 
	"CREATE_DATE" DATE,  
	"LAST_USER" VARCHAR2(100 BYTE), 
	"LAST_ORG" VARCHAR2(100 BYTE), 
	"LAST_DATE" DATE,
	"DESCRIBE" VARCHAR2(500 BYTE), 
	"EQUIPMENT_SORT_NAME" VARCHAR2(200 BYTE),
	"EQUIPMENT_LEVEL" VARCHAR2(50 BYTE),
	"CHECK_VALIDITY" CHAR(1 BYTE),
	"EDS_STORE_TYPE" VARCHAR2(50 BYTE),
	 CONSTRAINT "CKC_DISABLED_YDS_EDS_" CHECK ("ENABLED"='1' OR "ENABLED"='0') ENABLE NOVALIDATE, 
	 PRIMARY KEY ("EDS_GOODS_ID")
   );
COMMENT ON COLUMN "YDS_EDS_GOODS"."EDS_GOODS_TYPE" IS 'drug:医疗药品  equipment:器械耗材  other:其他';
COMMENT ON COLUMN "YDS_EDS_GOODS"."EDS_GOODS_NAME" IS '企业名称';
COMMENT ON COLUMN "YDS_EDS_GOODS"."EDS_GOODS_CODE" IS '企业编码';
COMMENT ON COLUMN "YDS_EDS_GOODS"."ENABLED" IS '禁用标记';
COMMENT ON COLUMN "YDS_EDS_GOODS"."CHECK_STATE_CODE" IS '0 ：新增1 :  提交2 ：审核3 ：完成';
COMMENT ON TABLE "YDS_EDS_GOODS"  IS '业务产品表';
 
 CREATE TABLE "YDS_EDS_GOODS_LOT" 
   (	"EDS_GOODS_LOT_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"YARD_GOODS_LOT_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"EDS_GOODS_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"EDS_LOT_NO" VARCHAR2(100 BYTE), 
	"EDS_LOT_VALIDITY" DATE, 
	"EDS_PRODUCE_DATE" DATE, 
	"OWNER_ORG_ID" VARCHAR2(100 BYTE), 
	"ENABLED" CHAR(1 BYTE), 
	"YARD_ID" NUMBER(*,0), 
	"CHECK_STATE_CODE" NUMBER(*,0), 
	"CREATE_USER" VARCHAR2(100 BYTE), 
	"CREATE_ORG" VARCHAR2(100 BYTE), 
	"CREATE_DATE" DATE,  
	"LAST_USER" VARCHAR2(100 BYTE), 
	"LAST_ORG" VARCHAR2(100 BYTE), 
	"LAST_DATE" DATE,
	"DESCRIBE" VARCHAR2(500 BYTE), 
	"STERILIZE_LOT_NO" VARCHAR2(100),
	"STERILIZE_TIME" DATE,
	 PRIMARY KEY ("EDS_GOODS_LOT_ID")
   );
 

 CREATE TABLE "YDS_GOODS" 
   (	"GOODS_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"GOODS_TYPE" VARCHAR2(50) NOT NULL ENABLE, 
	"GOODS_CODE" VARCHAR2(200 BYTE), 
	"WARE_NAME" VARCHAR2(200 BYTE), 
	"GOODS_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"GOODS_SPEC" VARCHAR2(200 BYTE), 
	"GOODS_MODEL" VARCHAR2(200 BYTE), 
	"GOODS_DESC" VARCHAR2(2000 BYTE), 
	"PACKING_SPEC" VARCHAR2(200 BYTE), 
	"REG_DOC" VARCHAR2(200 BYTE), 
	"ATH_DOC" VARCHAR2(200 BYTE), 
	"FACT_NAME" VARCHAR2(200 BYTE), 
	"UNIT_PRICE" NUMBER(20,4), 
	"UNIT_BIG_NAME" VARCHAR2(50 BYTE), 
	"UNIT_BIG_SUM" NUMBER(*,0), 
	"UNIT_MID_NAME" VARCHAR2(20 BYTE), 
	"UNIT_MID_SUM" NUMBER(*,0), 
	"UNIT_MIN_NAME" VARCHAR2(50 BYTE), 
	"UNIT_MIN_SUM" NUMBER(*,0), 
	"UNIT_BASE_NAME" VARCHAR2(50 BYTE), 
	"PREPARE_UNIT_LV" VARCHAR2(20 BYTE), 
	"STORE_UNIT_LV" VARCHAR2(20 BYTE), 
	"CONSUME_UNIT_LV" VARCHAR2(20 BYTE), 
	"SETTLE_UNIT_LV" VARCHAR2(20 BYTE), 
	"STORE_TYPE" VARCHAR2(20 BYTE), 
	"M_CODE" VARCHAR2(100 BYTE), 
	"GOODS_FORMAT_NAME" VARCHAR2(1000 BYTE), 
	"ENABLED" CHAR(1 BYTE) NOT NULL ENABLE, 
	"YARD_ID" NUMBER(*,0), 
	"CHECK_STATE_CODE" NUMBER(*,0), 
	"CREATE_USER" VARCHAR2(100 BYTE), 
	"CREATE_ORG" VARCHAR2(100 BYTE), 
	"CREATE_DATE" DATE, 
	"LAST_USER" VARCHAR2(100 BYTE), 
	"LAST_ORG" VARCHAR2(100 BYTE), 
	"LAST_DATE" DATE,
	"DESCRIBE" VARCHAR2(500 BYTE), 
	"CHANNEL_TYPE" VARCHAR2(50 BYTE),
	"EQUIPMENT_SORT_NAME" VARCHAR2(200 BYTE),
	"EQUIPMENT_LEVEL" VARCHAR2(50 BYTE),
	"CHECK_VALIDITY" CHAR(1 BYTE),
	 PRIMARY KEY ("GOODS_ID")
   );
 
 CREATE TABLE "YDS_GOODS_INFO" 
   (	"GOODS_ID" VARCHAR2(100 BYTE), 
	"WJ_CODE" VARCHAR2(100 BYTE), 
	"PT_CODE" VARCHAR2(100 BYTE), 
	"YB_CODE" VARCHAR2(100 BYTE), 
	"PREPARE_PRICE" NUMBER(20,4), 
	"PREPARE_TAX_RATE" NUMBER(10,4), 
	"CONSUME_PRICE" NUMBER(20,4), 
	"CONSUME_TAX_RATE" NUMBER(10,4), 
	"STORE_PRICE" NUMBER(20,4), 
	"YARD_ID" NUMBER(*,0), 
	"CHECK_STATE_CODE" NUMBER(*,0), 
	"CREATE_USER" VARCHAR2(100 BYTE), 
	"CREATE_ORG" VARCHAR2(100 BYTE), 
	"CREATE_DATE" DATE, 
	"LAST_USER" VARCHAR2(100 BYTE), 
	"LAST_ORG" VARCHAR2(100 BYTE), 
	"LAST_DATE" DATE,
	"DESCRIBE" VARCHAR2(500 BYTE)
   );
 

 CREATE TABLE "YDS_GOODS_LOT" 
   (	"GOODS_LOT_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"GOODS_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"LOT_NO" VARCHAR2(100 BYTE), 
	"LOT_VALIDITY" DATE, 
	"PRODUCE_DATE" DATE, 
	"ENABLED" CHAR(1 BYTE), 
	"YARD_ID" NUMBER(*,0), 
	"CHECK_STATE_CODE" NUMBER(*,0), 
	"CREATE_USER" VARCHAR2(100 BYTE), 
	"CREATE_ORG" VARCHAR2(100 BYTE), 
	"CREATE_DATE" DATE, 
	"LAST_USER" VARCHAR2(100 BYTE), 
	"LAST_ORG" VARCHAR2(100 BYTE), 
	"LAST_DATE" DATE,
	"DESCRIBE" VARCHAR2(500 BYTE), 
	"STERILIZE_LOT_NO" VARCHAR2(100),
	"STERILIZE_TIME" DATE,
	 PRIMARY KEY ("GOODS_LOT_ID")
   );
 
 CREATE TABLE "YDS_WORKBOOK" 
   (	"WORKBOOK_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"SORT_NAME" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"SORT_CODE" VARCHAR2(100 BYTE), 
	"KEY_VALUE" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"KEY_NAME" VARCHAR2(100 BYTE), 
	"KEY_INX" NUMBER(*,0), 
	"ENABLED" CHAR(1 BYTE), 
	"YARD_ID" NUMBER(*,0), 
	"CHECK_STATE_CODE" NUMBER(*,0), 
	"CREATE_USER" VARCHAR2(100 BYTE), 
	"CREATE_ORG" VARCHAR2(100 BYTE), 
	"CREATE_DATE" DATE, 
	"LAST_USER" VARCHAR2(100 BYTE), 
	"LAST_ORG" VARCHAR2(100 BYTE), 
	"LAST_DATE" DATE,
	"DESCRIBE" VARCHAR2(500 BYTE), 
	"EDITABLE" CHAR(1 BYTE),
	 PRIMARY KEY ("WORKBOOK_ID")
   );
 
create table SPD_ADJUST_STOCK_BIZ
(
  biz_id           VARCHAR2(50) not null,
  biz_code         VARCHAR2(50),
  biz_rule_id      VARCHAR2(32),
  biz_status_code  VARCHAR2(50),
  area_type        VARCHAR2(50),
  depot_id         VARCHAR2(100),
  yard_id          INTEGER,
  channel_type_code VARCHAR2(50),
  check_state_code      INTEGER,
  create_user      VARCHAR2(100),
  create_org       VARCHAR2(100),
  create_date      DATE,
  last_user        VARCHAR2(100),
  last_org         VARCHAR2(100),
  last_date        DATE,
  describe         VARCHAR2(500),
  adjust_type_code VARCHAR2(50),
  creator_depot_id VARCHAR2(50) not null,
  reason           VARCHAR2(200),
  remark           VARCHAR2(500),
  PRIMARY KEY (biz_id)
);
comment on table SPD_ADJUST_STOCK_BIZ  is '库存调节业务';

create table SPD_BIZ_EXAMPLE
(
  example_id   VARCHAR2(100),
  example_name VARCHAR2(100),
  example_code VARCHAR2(100),
  example_type CHAR(1),
  example_date DATE,
  yard_id      INTEGER,
  check_state_code  INTEGER,
  create_user  VARCHAR2(100),
  create_org   VARCHAR2(100),
  create_date  DATE,
  last_user    VARCHAR2(100),
  last_org     VARCHAR2(100),
  last_date    DATE,
  sync_date    DATE,
  clean_date   DATE,
  describe     VARCHAR2(500)
);
comment on table SPD_BIZ_EXAMPLE is 'example';
comment on column SPD_BIZ_EXAMPLE.example_type
  is '1：采购 2：备货 3：请领【申领】4：补货【申领】';


create table SPD_BIZ_EXAMPLE_ITEM
(
  example_item_id VARCHAR2(100),
  example_id      VARCHAR2(100),
  card_id         VARCHAR2(100),
  card_fixed_id   VARCHAR2(100) not null,
  goods_id        VARCHAR2(100) not null,
  example_qty     NUMBER(10),
  yard_id         INTEGER,
  check_state_code     INTEGER,
  create_user     VARCHAR2(100),
  create_org      VARCHAR2(100),
  create_date     DATE,
  last_user       VARCHAR2(100),
  last_org        VARCHAR2(100),
  last_date       DATE,
  sync_date       DATE,
  clean_date      DATE,
  describe        VARCHAR2(500)
);

create table SPD_BIZ_ITEM
(
  biz_item_id      VARCHAR2(50) not null,
  biz_id           VARCHAR2(50) not null,
  goods_id         VARCHAR2(50) not null,
  lot_id           VARCHAR2(50),
  box_no           VARCHAR2(50),
  biz_item_type    VARCHAR2(50),
  plan_qty         INTEGER,
  confirm_qty      INTEGER,
  unit_price       NUMBER(20,8),
  unit_lv          INTEGER,
  create_time      DATE,
  last_update_time DATE,
  origin_id        VARCHAR2(50),
  origin_item_id   VARCHAR2(50),
  as_planned       char(1),
  deal_qty_by_base_unit integer default 0 null,
  return_qty number(10,0) default 0,
  send_item_code   VARCHAR2(100),
  PRIMARY KEY (biz_item_id)
);
comment on table SPD_BIZ_ITEM  is '业务明细';
  

create table SPD_BIZ_LOG
(
  id              VARCHAR2(50) not null,
  biz_id          VARCHAR2(50) not null,
  user_id         VARCHAR2(50),
  biz_status_code VARCHAR2(100),
  log             VARCHAR2(500),
  create_time     DATE,
  PRIMARY KEY ("ID")
);
comment on table SPD_BIZ_LOG is '业务日志';
  
CREATE TABLE "SPD_DEPOT_GOODS_CONFIG" 
   ("ID" VARCHAR2(100 BYTE) NOT NULL, 
    "DEPOT_ID" VARCHAR2(100 BYTE),
	"GOODS_ID"  VARCHAR2(100 BYTE),
	"LAST_PREPARE_TIME" DATE,
	"AUTO_PREPARE_STRATAGE_CODE" VARCHAR2(100 BYTE), 
	"QUOTA_QTY" INTEGER,
	"QUOTA_STRATAGE_CODE" VARCHAR2(100 BYTE), 
	"UPPER_LIMIT"           NUMBER(10),
	"LOWER_LIMIT"           NUMBER(10),
	"REPLENISH_UPPER_LIMIT" NUMBER(10),
	"REPLENISH_LOWER_LIMIT" NUMBER(10),
	"UNCOMPLETED_PREPARE_QTY" NUMBER(10) default 0,
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "SPD_DEPOT_GOODS_CONFIG"  IS '仓库产品配置表';
   
create table SPD_DEPOT_CARD
(
  card_id            VARCHAR2(100) not null,
  card_code          VARCHAR2(100),
  shelf_id           VARCHAR2(100),
  lose_sheft_id      VARCHAR2(100),
  goods_id           VARCHAR2(100),
  store_unit_lv      VARCHAR2(20),
  store_unit_name    VARCHAR2(20),
  depot_id           VARCHAR2(100) not null,
  enabled            CHAR(1) not null,
  yard_id            INTEGER,
  check_state_code   INTEGER,
  create_user        VARCHAR2(100),
  create_date        DATE,
  create_org         VARCHAR2(100),
  last_user          VARCHAR2(100),
  last_date          DATE,
  last_org           VARCHAR2(100),
  describe           VARCHAR2(500),
  isolation_shelf_id VARCHAR2(100),
  PRIMARY KEY (card_id)
);

create table SPD_DEPOT_STOCK
(
  stock_id         VARCHAR2(100) not null,
  goods_id         VARCHAR2(100),
  goods_lot_id     VARCHAR2(100),
  stock_qty        NUMBER(20,4),
  min_stock_qty    NUMBER(20,4),
  depot_id         VARCHAR2(100),
  create_date      DATE,
  last_date        DATE,
  describe         VARCHAR2(500),
  PRIMARY KEY (stock_id)
);
  

create table SPD_DEPOT_TASK
(
  task_id          VARCHAR2(100) not null,
  dispatcher_id    VARCHAR2(100),
  task_code        VARCHAR2(50),
  task_type        VARCHAR2(50),
  task_org_id      VARCHAR2(100),
  task_dept_id     VARCHAR2(100),
  task_depot_id    VARCHAR2(100),
  task_area_id     VARCHAR2(100) not null,
  task_user        VARCHAR2(100),
  start_time       DATE,
  finish_time      DATE,
  yard_id          INTEGER,
  check_state_code INTEGER,
  create_user      VARCHAR2(100),
  create_org       VARCHAR2(100),
  create_date      DATE,
  last_user        VARCHAR2(100),
  last_org         VARCHAR2(100),
  last_date        DATE,
  describe         VARCHAR2(500),
  biz_id           VARCHAR2(50) default 'EMPTY' not null,
  PRIMARY KEY (task_id)
);

comment on column SPD_DEPOT_TASK.task_type
  is 'on_shelf_task: 散件上架 off_shelf_task : 散件下架 ';
  
  
create table SPD_DISPATCHER
(
  dispatcher_id       VARCHAR2(100) not null,
  dispatcher_code     VARCHAR2(50),
  dispatcher_type     VARCHAR2(50),
  dispatcher_org_id   VARCHAR2(100),
  dispatcher_dept_id  VARCHAR2(100),
  dispatcher_depot_id VARCHAR2(100),
  yard_id             INTEGER,
  check_state_code    INTEGER,
  create_user         VARCHAR2(100),
  create_org          VARCHAR2(100),
  create_date         DATE,
  last_user           VARCHAR2(100),
  last_org            VARCHAR2(100),
  last_date           DATE,
  describe            VARCHAR2(500),
  primary key (dispatcher_id)
)
;
comment on column SPD_DISPATCHER.dispatcher_type
  is 'on_shelf：上架作业 off_shelf: 下架作业 ';
  
create table SPD_DISPATCHER_REF
(
  dispatcher_ref_id VARCHAR2(100) not null,
  dispatcher_id     VARCHAR2(100),
  ref_sheet_id      VARCHAR2(100),
  area_type         VARCHAR2(50),
  ref_object_type   VARCHAR2(50),
  primary key (dispatcher_ref_id)
);
  

create table SPD_LOGISTICS_TASK
(
  task_id       VARCHAR2(50) not null,
  biz_id        VARCHAR2(50) not null,
  task_code     VARCHAR2(50),
  task_type     VARCHAR2(50),
  from_org_id   VARCHAR2(100),
  from_depot_id VARCHAR2(100),
  to_org_id     VARCHAR2(100),
  to_depot_id   VARCHAR2(100),
  yard_id       INTEGER,
  check_state_code   INTEGER,
  create_user   VARCHAR2(100),
  create_org    VARCHAR2(100),
  create_date   DATE,
  last_user     VARCHAR2(100),
  last_org      VARCHAR2(100),
  last_date     DATE,
  describe      VARCHAR2(500),
  delivery_time DATE,
  primary key (task_id)
)
;
comment on table SPD_LOGISTICS_TASK
  is '物流作业';
  
  
create table SPD_LOGISTICS_TASK_ITEM
(
  task_item_id      VARCHAR2(50) not null,
  task_id           VARCHAR2(50) not null,
  item_code         VARCHAR2(50) not null,
  goods_id          VARCHAR2(50) not null,
  lot_id            VARCHAR2(50) not null,
  parent_wrapper_id varchar2(32),
  plan_qty          INTEGER,
  confirm_qty       INTEGER,
  unit_lv           INTEGER,
  unit_price        NUMBER(20,4),
  create_time       DATE,
  last_update_time  DATE,
  receive_qty       INTEGER,
  primary key (task_item_id)
);
comment on table SPD_LOGISTICS_TASK_ITEM is '物流作业明细';
  
create table SPD_MOVE_AREA_BIZ
(
  biz_id           VARCHAR2(50) not null,
  biz_code         VARCHAR2(50),
  biz_rule_id      VARCHAR2(32),
  biz_status_code  VARCHAR2(50),
  depot_id         VARCHAR2(100),
  from_area_type   VARCHAR2(50),
  to_area_type     VARCHAR2(50),
  yard_id          INTEGER,
  channel_type_code VARCHAR2(50),
  check_state_code INTEGER,
  create_user      VARCHAR2(100),
  create_org       VARCHAR2(100),
  create_date      DATE,
  last_user        VARCHAR2(100),
  last_org         VARCHAR2(100),
  last_date        DATE,
  describe         VARCHAR2(500),
  creator_depot_id VARCHAR2(50) not null,
  remark           VARCHAR2(500),
  primary key (biz_id)
)
;
comment on table SPD_MOVE_AREA_BIZ
  is '移仓业务';
  
  
create table SPD_OFF_SHELF_TASK_ITEM
(
  task_item_id        VARCHAR2(100) not null,
  task_id             VARCHAR2(100) not null,
  card_id             VARCHAR2(100),
  goods_id            VARCHAR2(100) not null,
  goods_format_name   VARCHAR2(200),
  packing_spec        VARCHAR2(200),
  unit_name           VARCHAR2(50),
  unit_lv             INTEGER,
  lot_id              VARCHAR2(100),
  plan_qty            NUMBER(20,4),
  confirm_qty         NUMBER(20,4),
  shelf_id            VARCHAR2(100),
  create_time         DATE,
  last_update_time    DATE,
  parent_wrapper_id   varchar2(32),
  item_code           VARCHAR2(100),
  unit_price          NUMBER(20,4),
  primary key (task_item_id)
);
comment on table SPD_OFF_SHELF_TASK_ITEM
  is '仓库作业下架明细'; 

create table SPD_ON_SHELF_TASK_ITEM
(
  task_item_id        VARCHAR2(100) not null,
  task_id             VARCHAR2(100) not null,
  card_id             VARCHAR2(100),
  goods_id            VARCHAR2(100) not null,
  goods_format_name   VARCHAR2(200),
  packing_spec        VARCHAR2(200),
  parent_wrapper_id varchar2(32),
  unit_name           VARCHAR2(50),
  unit_lv             INTEGER,
  lot_id              VARCHAR2(100),
  plan_qty            NUMBER(20,4),
  confirm_qty         NUMBER(20,4),
  shelf_id            VARCHAR2(100),
  create_time         DATE,
  last_update_time    DATE,
  item_code           VARCHAR2(100),
  unit_price          NUMBER(20,4),
  primary key (task_item_id)
)
;
comment on table SPD_ON_SHELF_TASK_ITEM
  is '仓库作业上架明细';
  

create table SPD_RECEIVE_BIZ
(
  biz_id           VARCHAR2(50) not null,
  biz_code         VARCHAR2(50),
  biz_rule_id      VARCHAR2(32),
  PREPARE_INFORM_BIZ_ID VARCHAR2(50 BYTE),
  biz_status_code  VARCHAR2(50),
  from_org_id      VARCHAR2(32),
  from_dept_id     VARCHAR2(32),
  from_depot_id    VARCHAR2(32),
  to_org_id        VARCHAR2(32),
  to_dept_id       VARCHAR2(32),
  to_depot_id      VARCHAR2(32),
  FINAL_DEPOT_ID   VARCHAR2(32 BYTE),
  FINAL_AREA_TYPE   VARCHAR2(32 BYTE),
  channel_type_code VARCHAR2(50),
  recorded         char(1 byte),
  sale_completed   char(1),
  yard_id          INTEGER,
  check_state_code INTEGER,
  create_user      VARCHAR2(100),
  create_org       VARCHAR2(100),
  create_date      DATE,
  last_user        VARCHAR2(32),
  last_org         VARCHAR2(32),
  last_date        DATE,
  describe         VARCHAR2(500),
  TO_AREA_TYPE     VARCHAR2(32),
  creator_depot_id VARCHAR2(32) not null,
  send_code        VARCHAR2(50),
  send_id        VARCHAR2(50),
  remark           VARCHAR2(500),
  primary key (biz_id)
);
comment on table SPD_RECEIVE_BIZ
  is '收货业务';

create table SPD_REPLENISH_BIZ
(
  biz_id              VARCHAR2(50) not null,
  biz_code            VARCHAR2(50),
  biz_rule_id         VARCHAR2(32),
  biz_status_code     VARCHAR2(50),
  from_org_id         VARCHAR2(100),
  from_depot_id       VARCHAR2(100),
  to_org_id           VARCHAR2(100),
  to_depot_id         VARCHAR2(100),
  channel_type_code   VARCHAR2(50),
  yard_id             INTEGER,
  check_state_code    INTEGER,
  create_user         VARCHAR2(100),
  create_org          VARCHAR2(100),
  create_date         DATE,
  last_user           VARCHAR2(100),
  last_org            VARCHAR2(100),
  last_date           DATE,
  describe            VARCHAR2(500),
  from_area_type      VARCHAR2(50),
  to_area_type        VARCHAR2(50),
  creator_depot_id    VARCHAR2(50) not null,
  reason              VARCHAR2(200),
  remark              VARCHAR2(500),
  primary key (biz_id)
);
comment on table SPD_REPLENISH_BIZ
  is '申领业务';

create table SPD_PREPARE_INFORM_BIZ
(
  BIZ_ID      VARCHAR2(50) not null,
  BIZ_CODE    VARCHAR2(50),
  BIZ_RULE_ID     VARCHAR2(32),
  BIZ_STATUS_CODE VARCHAR2(50),
  CREATOR_DEPOT_ID VARCHAR2(32),
  CHANNEL_TYPE_CODE VARCHAR2(32),
  FROM_DEPT_ID    VARCHAR2(32),
  TO_DEPOT_ID     VARCHAR2(32),
  TO_AREA_TYPE       VARCHAR2(32),
  CONFIRM_DEPT_ID VARCHAR2(32 BYTE),
  COLLECT_DEPOT_ID VARCHAR2(32 BYTE),
  COLLECT_AREA_TYPE VARCHAR2(32 BYTE),
  FROM_ORG_ID     VARCHAR2(32),
  PLAN_AMOUNT      NUMBER(10,2),
  CONFIRM_AMOUNT   NUMBER(10,2),
  YARD_ID          INTEGER,
  CHECK_STATE_CODE INTEGER,
  INFORM_TIME DATE,
  CREATE_DATE      DATE,
  LAST_DATE        DATE,
  DESCRIBE         VARCHAR2(500),
  CREATE_USER      VARCHAR2(50),
  CREATE_ORG       VARCHAR2(50),
  LAST_USER        VARCHAR2(50),
  LAST_ORG         VARCHAR2(50),
  EX_RESOURCE_ID VARCHAR2(100),
  ESTIMATED_DELIVERY_TIME DATE,
  REQUESTED_DELIVERY_TIME DATE,
  REMARK           VARCHAR2(500),
  primary key (BIZ_ID)
);

create table SPD_CONSUME_BIZ
(
  BIZ_ID      VARCHAR2(50) not null,
  BIZ_CODE    VARCHAR2(50),
  BIZ_RULE_ID     VARCHAR2(32),
  BIZ_STATUS_CODE VARCHAR2(50),
  CREATOR_DEPOT_ID VARCHAR2(32),
  CHANNEL_TYPE_CODE VARCHAR2(32),
  DEPOT_ID     VARCHAR2(50),
  AREA_TYPE    VARCHAR2(50),
  YARD_ID          INTEGER,
  CHECK_STATE_CODE INTEGER,
  CREATE_DATE      DATE,
  LAST_DATE        DATE,
  DESCRIBE         VARCHAR2(500),
  CREATE_USER      VARCHAR2(50),
  CREATE_ORG       VARCHAR2(50),
  LAST_USER        VARCHAR2(50),
  LAST_ORG         VARCHAR2(50),
  remark           VARCHAR2(500),
  primary key (BIZ_ID)
);
COMMENT ON TABLE "SPD_CONSUME_BIZ"  IS '消耗业务表';

create table SPD_RETURN_GOODS_BIZ
(
  BIZ_ID      VARCHAR2(50) not null,
  BIZ_CODE    VARCHAR2(50),
  BIZ_RULE_ID     VARCHAR2(32),
  BIZ_STATUS_CODE VARCHAR2(50),
  CREATOR_DEPOT_ID VARCHAR2(32),
  CHANNEL_TYPE_CODE VARCHAR2(32),
  FROM_DEPOT_ID     VARCHAR2(32),
  FROM_AREA_TYPE    VARCHAR2(32),
  TO_ORG_ID    VARCHAR2(32),
  TO_DEPT_ID    VARCHAR2(32),
  auto_assign_receive char(1),
  RETURN_GOODS_TIME DATE,
  YARD_ID          INTEGER,
  CHECK_STATE_CODE INTEGER,
  CREATE_DATE      DATE,
  LAST_DATE        DATE,
  DESCRIBE         VARCHAR2(500),
  CREATE_USER      VARCHAR2(50),
  CREATE_ORG       VARCHAR2(50),
  LAST_USER        VARCHAR2(50),
  LAST_ORG         VARCHAR2(50),
  REMARK           VARCHAR2(500),
  primary key (BIZ_ID)
);
COMMENT ON TABLE "SPD_RETURN_GOODS_BIZ"  IS '退货业务表';

create table SPD_SHELF_STOCK
(
  shelf_stock_id    VARCHAR2(50) not null,
  shelf_id          varchar2(32) not null,
  goods_id          VARCHAR2(50) not null,
  goods_lot_id      VARCHAR2(50) not null,
  depot_id          VARCHAR2(50) not null,
  shelf_type        VARCHAR2(20) not null,
  store_unit_qty    INTEGER,
  min_unit_qty      INTEGER,
  min_unit_lock_qty INTEGER,
  create_time       DATE,
  last_update_time  DATE,
  primary key (shelf_stock_id)
);
comment on table SPD_SHELF_STOCK
  is '货位库存';
  
  
create table SPD_TURNOVER_BOX
(
  id         VARCHAR2(100) not null,
  wrapper_no       VARCHAR2(100),
  scene_code       VARCHAR2(100),
  owner_id varchar2(32),
  yard_id                 INTEGER,
  check_state_code        INTEGER,
  create_user             VARCHAR2(100),
  create_org              VARCHAR2(100),
  create_date             DATE,
  last_user               VARCHAR2(100),
  last_org                VARCHAR2(100),
  last_date               DATE,
  sync_date               DATE,
  clean_date              DATE,
  describe                VARCHAR2(500),
  enabled                 CHAR(1),
  primary key (id)
);

create table SPD_INVENTORY
(
  inventory_id    VARCHAR2(100) not null,
  inventory_code  VARCHAR2(100),
  inventory_type  VARCHAR2(50),
  inventory_user  VARCHAR2(100),
  is_fixed        CHAR(1),
  org_id          VARCHAR2(100),
  dept_id         VARCHAR2(100),
  depot_id        VARCHAR2(100),
  area_id         VARCHAR2(100) not null,
  yard_id         INTEGER,
  check_state_code     INTEGER,
  create_user     VARCHAR2(100),
  create_date     DATE,
  create_org      VARCHAR2(100),
  last_user       VARCHAR2(100),
  last_date       DATE,
  last_org        VARCHAR2(100),
  describe        VARCHAR2(500),
  primary key (inventory_id)
);
comment on column SPD_INVENTORY.inventory_type
  is 'static_disc：静盘 static_disc_blind：静盘(盲)';
comment on column SPD_INVENTORY.is_fixed
  is '0:散件 1:定数';
 
create table SPD_INVENTORY_ITEM
(
  inventory_item_id  VARCHAR2(100) not null,
  inventory_id       VARCHAR2(100),
  goods_id           VARCHAR2(100),
  stock_goods_lot_id VARCHAR2(100),
  plan_qty           NUMBER(10),
  show_qty           NUMBER(10),
  check_qty          NUMBER(10),
  unqualified_qty    NUMBER(10),
  depot_id           VARCHAR2(100),
  shelf_id           VARCHAR2(100),
  yard_id            INTEGER,
  check_state_code   INTEGER,
  create_user        VARCHAR2(100),
  create_date        DATE,
  create_org         VARCHAR2(100),
  last_user          VARCHAR2(100),
  last_date          DATE,
  last_org           VARCHAR2(100),
  describe           VARCHAR2(500),
  primary key (inventory_item_id)
);

create table spd_property_change_rule(
	id varchar2(32 byte),
	name varchar2(100 byte),
	debit_org_id varchar2(32 byte),
	debit_dept_id varchar2(32 byte),
	debit_depot_id varchar2(32),
	credit_org_id varchar2(32 byte),
	credit_dept_id varchar2(32 byte),
	credit_depot_id varchar2(32),
	biz_rule_id varchar2(32 byte),
	biz_type_code varchar2(50 byte),
	trigger_step_code varchar2(60 byte),
	deal_price_stratage_code varchar2(32 byte),
	enabled char(1 byte),
	create_time date,
	last_update_time date,
	custom_name varchar2(100 byte),
	rule_code varchar2(50 byte),
	primary key (id)
);
comment on table spd_property_change_rule is '物权变更规则表';

--新增业务帐明细表
create table spd_general_ledger(
	id varchar2(32),
    goods_id varchar2(32),
    lot_id varchar2(32),
    unit_lv integer,
    unit_price number(12,4),
    total_amount number(15, 4),
    storage_qty integer,
    current_storage_qty integer,
    deal_qty integer,
    return_qty integer,
	verification_qty integer,
	owner_org_id varchar2(32),
	owner_dept_id varchar2(32),
	create_time date,
	last_update_time date,
	primary key (id)
);
comment on table spd_general_ledger is '业务总账表';

--物权变更记录表
create table spd_property_change(
    id varchar2(32 byte),
    daily_clean_id varchar2(32 byte),
    property_change_rule_id varchar2(32 byte),
    biz_type_code varchar2(50 byte),
    biz_id varchar2(32 byte),
    biz_code varchar2(32 byte),
    task_id varchar2(32 byte),
    task_code varchar2(32 byte),
    trigger_biz_step_code varchar2(100 byte),
    debit_org_id varchar2(32 byte),
    debit_dept_id varchar2(32 byte),
    debit_depot_id varchar2(32 byte),
    credit_org_id varchar2(32 byte),
    credit_dept_id varchar2(32 byte),
    credit_depot_id varchar2(32 byte),
    description varchar2(1000 byte),
    target_date date,
	create_time date,
	last_update_time date,
	primary key (id)
);
comment on table spd_property_change is '物权变更表';

--物权变更明细表
create table spd_property_change_item(
    id varchar2(32 byte),
    record_id varchar2(32 byte),
    goods_id varchar2(32 byte),
    lot_id varchar2(32 byte),
    unit_name varchar2(20),
    unit_lv integer,
    qty integer,
    origin_item_id varchar2(32 byte),
	create_time date,
	last_update_time date,
	primary key (id)
);
comment on table spd_property_change_item is '物权变更明细表';

create table spd_prp_chg_item_relation
(
  id                       varchar2(32) not null,
  prop_chg_item_id         varchar2(32) not null,
  receive_id               varchar2(32) not null,
  receive_item_id          varchar2(32) not null,
  deal_qty                 integer,
  send_code                varchar2(32),
  send_id                  varchar2(50),
  send_item_code           varchar2(32),
  unit_price               number(20,8),
  primary key (id)
);
comment on table spd_prp_chg_item_relation is '物权变更明细关联表';

--日清对账规则表
create table spd_daily_clean_rule(
    id varchar2(32 byte),
    name varchar2(200 byte),
    rule_prior integer,
    feedback_rule_id varchar2(32 byte),
    depot_id varchar2(32 byte),
    enabled char(1 byte),
    can_be_origin_rule   char(1),
	create_time date,
	last_update_time date,
	custom_name varchar2(100 byte),
	manual_apply char(1),
	rule_code varchar2(50 byte),
	primary key (id)
);
comment on table spd_daily_clean_rule is '日清对账规则';

--日清对账业务表
create table spd_daily_clean_biz(
    biz_id              varchar2(32 byte),
    biz_code            varchar2(50),
    biz_rule_id         varchar2(32),
    biz_status_code     varchar2(100),
    fin_rec_id          varchar2(32),
    channel_type_code   varchar2(32),
    target_date         date,
    confirm_user_id     varchar2(32),
    depot_id            varchar2(32),
    description         varchar2(1000),
    yard_id             integer,
    check_state_code    integer,
    create_date         date,
    last_date           date,
    describe            varchar2(500),
    create_user         varchar2(32),
    create_org          varchar2(32),
    last_user           varchar2(32),
    last_org            varchar2(32),
    remark              varchar2(500),
	primary key         (biz_id)
);
comment on table spd_daily_clean_biz is '日清对账业务';

--财务对账规则表
create table spd_fin_rec_rule(
    id                   varchar2(32 byte),
    name                 varchar2(200 byte),
    rule_prior           integer,
    feedback_rule_id     varchar2(32 byte),
    apply_dept_id        varchar2(32 byte),
    supplier_dept_id     varchar2(32),
    target_depot_ids     varchar2(2000),
    can_be_origin_rule   char(1),
    enabled              char(1 byte),
	create_time          date,
	last_update_time     date,
	custom_name          varchar2(100 byte),
	manual_apply 		 char(1),
	rule_code			 varchar2(50 byte),
	intigration_component varchar2(50 byte),
	primary key (id)
);
comment on table spd_fin_rec_rule is '财务对账规则';

--财务对账业务表
create table spd_fin_rec_biz(
    biz_id              varchar2(32 byte),
    biz_code            varchar2(50),
    biz_rule_id         varchar2(32),
    biz_status_code     varchar2(100),
    channel_type_code   varchar2(32),
    start_date          date,
    end_date            date,
    clean_days          varchar2(3000),
    reconciliation_date date,
    confirm_user_id     varchar2(32),
    sync_date           date,
    dept_id             varchar2(32),
    supplier_dept_id    varchar2(32),
    item_generated      char(1),
    ending_balance      number(16,4),
    next_rec_id         varchar2(32),
    begining_rec_id     varchar2(32),
    description         varchar2(1000),
    yard_id             integer,
    check_state_code    integer,
    create_date         date,
    last_date           date,
    describe            varchar2(500),
    create_user         varchar2(32),
    create_org          varchar2(32),
    last_user           varchar2(32),
    last_org            varchar2(32),
    remark              varchar2(500),
	primary key         (biz_id)
);
comment on table spd_fin_rec_biz is '财务对账业务';

--财务对账明细表
create table spd_fin_rec_item(
    id                   varchar2(32),
    reconciliation_id    varchar2(32),
    goods_id             varchar2(32),
    lot_id               varchar2(32),
    unit_name            varchar2(10),
    unit_price           number(12,4),
    reconciliation_qty   integer,
    settlement_unit_lv   integer,
    settlement_unit_name varchar2(10),
    settlement_qty       integer,
    beginning_qty        integer,
    ending_qty           integer,
    adjustment_qty       integer,
	create_time          date,
	last_update_time     date,
	primary key (id)
);
comment on table spd_fin_rec_item is '财务对账明细';

  
 CREATE TABLE EIS_BLOCK_SYNC_RESOURCE
   (ID VARCHAR2(32 BYTE), 
	EX_SYSTEM_CODE VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	RESOURCE_TYPE  VARCHAR2(50 BYTE),
	FROM_RESOURCE_ID VARCHAR2(50 BYTE), 
	CREATE_TIME DATE NOT NULL ENABLE,
	 PRIMARY KEY (ID)
   ) ;
COMMENT ON TABLE EIS_DEPOT_SYNC_RESOURCE  IS '同步资源黑名单';
  

CREATE TABLE EIS_DEPOT_CARD_SYNC_RESOURCE
   ( ID VARCHAR2(32 BYTE), 
	EX_SYSTEM_CODE VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	EX_RESOURCE_ID VARCHAR2(50 BYTE), 
	SPD_RESOURCE_ID VARCHAR2(50 BYTE), 
	CREATE_TIME DATE NOT NULL ENABLE, 
	LAST_UPDATE_TIME DATE NOT NULL ENABLE, 
	IGNORE_WARN CHAR(1 BYTE),
	SYNC_DESCRIPTION VARCHAR2(4000 BYTE),
	PRIMARY KEY (ID)
   );
COMMENT ON TABLE EIS_DEPOT_CARD_SYNC_RESOURCE  IS '账页同步资源';

CREATE TABLE EIS_SHELF_SYNC_RESOURCE
   ( ID VARCHAR2(32 BYTE), 
	EX_SYSTEM_CODE VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	EX_RESOURCE_ID VARCHAR2(50 BYTE), 
	SPD_RESOURCE_ID VARCHAR2(50 BYTE), 
	CREATE_TIME DATE NOT NULL ENABLE, 
	LAST_UPDATE_TIME DATE NOT NULL ENABLE, 
	IGNORE_WARN CHAR(1 BYTE),
	SYNC_DESCRIPTION VARCHAR2(4000 BYTE),
	PRIMARY KEY (ID)
   );
COMMENT ON TABLE EIS_SHELF_SYNC_RESOURCE  IS '货位同步资源';


CREATE TABLE SPD_SHELF_LOCK_STOCK
(
  ID               VARCHAR2(50) not null,
  SHELF_STOCK_ID     VARCHAR2(50),
  BIZ_ID            VARCHAR2(50),
  QTY_BY_MIN_UNIT     NUMBER(10,2),
  CREATE_TIME      DATE,
  LAST_UPDATE_TIME DATE,
  DESCRIBE         VARCHAR2(500),
  LOCKED           NUMBER(1),
  PRIMARY KEY (ID)
);

CREATE TABLE "SPD_FEEDBACK_RULE" 
   ("ID" VARCHAR2(32 BYTE),
    "NAME" VARCHAR2(100 BYTE),
    "AUTO_CREATE_DISPATCHER" CHAR(1 BYTE),
    "AUTO_REVIEW_DISPATCHER" CHAR(1 BYTE),
    "AUTO_REVIEW_DEPOT_TASK" CHAR(1 BYTE),
    "AUTO_COMMIT_MOVE_AREA" CHAR(1 BYTE),
    "AUTO_REVIEW_MOVE_AREA" CHAR(1 BYTE),
    "AUTO_CREATE_OFF_SHELF_DISP" CHAR(1 BYTE),
    "AUTO_REVIEW_OFF_SHELF_DISP" CHAR(1 BYTE),
    "AUTO_REVIEW_OFF_SHELF_TASK" CHAR(1 BYTE),
    "AUTO_CREATE_ON_SHELF_DISP" CHAR(1 BYTE),
    "AUTO_REVIEW_ON_SHELF_DISP" CHAR(1 BYTE),
    "AUTO_REVIEW_ON_SHELF_TASK" CHAR(1 BYTE),
    "AUTO_COMMIT_RECEIVE" CHAR(1 BYTE),
    "AUTO_REVIEW_RECEIVE" CHAR(1 BYTE),
    "AUTO_COMMIT_REPLENISH" CHAR(1 BYTE),
    "AUTO_REVIEW_REPLENISH" CHAR(1 BYTE),
    "AUTO_COMMIT_DELIVERY_TASK" CHAR(1 BYTE),
    "AUTO_REVIEW_DELIVERY_TASK" CHAR(1 BYTE),
    "AUTO_COMMIT_PREPARE_INFORM" CHAR(1 BYTE),
	"AUTO_REVIEW_PREPARE_INFORM" CHAR(1 BYTE),
	"AUTO_INFORM_SUPPLIER" CHAR(1 BYTE),
    "AUTO_COMPLETE_PREPARE_INFORM" CHAR(1 BYTE),
    "AUTO_REVIEW_CONSUME" CHAR(1 BYTE),
    "AUTO_COMPLETE_CONSUME" CHAR(1 BYTE),
    "AUTO_REVIEW_RETURN_GOODS" CHAR(1 BYTE),
    "AUTO_COMPLETE_RETURN_GOODS" CHAR(1 BYTE),
    auto_commit_adjust_stock char(1),
    auto_review_adjust_stock char(1),
    "EMPTY_BIZ_AUTO_FEEDBACK" CHAR(1 BYTE),
	auto_review_daily_clean char(1 byte),
	auto_commit_fin_rec char(1 byte),
	auto_review_fin_rec char(1 byte),
	auto_sync_to_supplier char(1 byte),
	auto_complete_fin_rec char(1 byte),
	"CREATE_TIME" DATE,  
    "LAST_UPDATE_TIME" DATE,
    "BIZ_TYPE" VARCHAR2(100 BYTE),
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "SPD_FEEDBACK_RULE"  IS '反馈规则表';

CREATE TABLE "SPD_RECEIVE_RULE" 
   ("ID" VARCHAR2(32 BYTE),
    "NAME" VARCHAR(100 BYTE),
    "RULE_PRIOR" INTEGER,
    "FEEDBACK_RULE_ID" VARCHAR2(32),
    "ORIGIN_RULE_ID" VARCHAR2(32 BYTE),
    "MUST_PREPARE" CHAR(1 BYTE),
	"CREATE_TIME" DATE,  
    "LAST_UPDATE_TIME" DATE,
    "ENABLED" CHAR(1 BYTE),
    "FROM_ORG_ID" VARCHAR2(32 BYTE),
    "TO_DEPOT_ID" VARCHAR2(32 BYTE),
    "TO_AREA_TYPE" VARCHAR2(32 BYTE),
    "FINAL_DEPOT_ID" VARCHAR2(32 BYTE),
    "FINAL_AREA_TYPE" VARCHAR2(32 BYTE),
    "FROM_DEPT_ID" VARCHAR2(32 BYTE),
    "CAN_BE_ORIGIN_RULE" CHAR(1 BYTE),
    "CUSTOM_NAME" VARCHAR2(100 BYTE),
    "MANUAL_APPLY" CHAR(1 BYTE),
    "RULE_CODE" VARCHAR2(50 BYTE),
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "SPD_RECEIVE_RULE"  IS '收货业务规则表';

CREATE TABLE "SPD_ADJUST_STOCK_RULE" 
   ("ID" VARCHAR2(32 BYTE),
    "NAME" VARCHAR(100 BYTE),
    "RULE_PRIOR" INTEGER,
    "FEEDBACK_RULE_ID" VARCHAR2(32),
	"CREATE_TIME" DATE,  
    "LAST_UPDATE_TIME" DATE,
    "ENABLED" CHAR(1 BYTE),
    "CAN_BE_ORIGIN_RULE" CHAR(1 BYTE),
    "DEPOT_ID" VARCHAR2(50 BYTE),
    "AREA_TYPE" VARCHAR2(32 BYTE),
    "TYPE_CODE" VARCHAR2(32 BYTE),
    "CUSTOM_NAME" VARCHAR2(100 BYTE),
    "MANUAL_APPLY" CHAR(1 BYTE),
    "INIT_ADJUST" CHAR(1 BYTE ) default 0,
    "RULE_CODE" VARCHAR2(50 BYTE),
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "SPD_ADJUST_STOCK_RULE"  IS '库存调节业务规则表';

CREATE TABLE "SPD_MOVE_AREA_RULE" 
   ("ID" VARCHAR2(32 BYTE),
    "NAME" VARCHAR(100 BYTE),
    "RULE_PRIOR" INTEGER,
    "FEEDBACK_RULE_ID" VARCHAR2(32),
	"CREATE_TIME" DATE,  
    "LAST_UPDATE_TIME" DATE,
    "ENABLED" CHAR(1 BYTE),
    "CAN_BE_ORIGIN_RULE" CHAR(1 BYTE),
    "FROM_DEPOT_ID" VARCHAR2(32 BYTE),
    "FROM_AREA_TYPE" VARCHAR2(32 BYTE),
    "TO_DEPOT_ID" VARCHAR2(100 BYTE),
    "TO_AREA_TYPE" VARCHAR2(32 BYTE),
    "USAGE" VARCHAR2(100 BYTE),
    "CUSTOM_NAME" VARCHAR2(100 BYTE),
    "MANUAL_APPLY" CHAR(1 BYTE),
    "RULE_CODE" VARCHAR2(50 BYTE),
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "SPD_MOVE_AREA_RULE"  IS '移仓业务规则表';

CREATE TABLE "SPD_REPLENISH_RULE" 
   ("ID" VARCHAR2(32 BYTE),
    "NAME" VARCHAR(100 BYTE),
    "RULE_PRIOR" INTEGER,
    "FEEDBACK_RULE_ID" VARCHAR2(32),
    "ORIGIN_RULE_ID" VARCHAR2(32 BYTE),
    "FROM_DEPOT_ID" VARCHAR(32 BYTE),
    "FROM_DEPOT_AREA_TYPE" VARCHAR(32 BYTE),
    "TO_DEPOT_ID" VARCHAR(32 BYTE),
    "TO_DEPOT_AREA_TYPE" VARCHAR(32 BYTE),
    "FROM_DEPOT_CAN_APPLY" CHAR(1 BYTE),
    "TO_DEPOT_CAN_APPLY" CHAR(1 BYTE),
    "FROM_DEPOT_CAN_CONFIRM" CHAR(1 BYTE),
    "TO_DEPOT_CAN_CONFIRM" CHAR(1 BYTE),
    "SPECIFICATION_TYPE_CODE" VARCHAR(32 BYTE),
	"CREATE_TIME" DATE,  
    "LAST_UPDATE_TIME" DATE,
    "ENABLED" CHAR(1 BYTE),
    "USE_TURNOVER_BOX" CHAR(1 BYTE),
    "AUTO_SET_OSTASK_CFM_QTY" CHAR(1 BYTE),
    "AUTO_SET_BIZ_CONFIRM_QTY" CHAR(1 BYTE),
    "CAN_BE_ORIGIN_RULE" CHAR(1 BYTE),
    "ORIGIN_ITEM_CONDITION" VARCHAR2(32 BYTE),
    "CUSTOM_NAME" VARCHAR2(100 BYTE),
    "MANUAL_APPLY" CHAR(1 BYTE),
    "RULE_CODE" VARCHAR2(50 BYTE),
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "SPD_REPLENISH_RULE"  IS '申领业务规则表';

CREATE TABLE "SPD_PREPARE_INFORM_RULE" 
   ("ID" VARCHAR2(32 BYTE),
    "NAME" VARCHAR(100 BYTE),
    "RULE_PRIOR" INTEGER,
    "FEEDBACK_RULE_ID" VARCHAR2(32),
    ORIGIN_RULE_ID VARCHAR2(32 BYTE),
	"CREATE_TIME" DATE,  
    "LAST_UPDATE_TIME" DATE,
    "ENABLED" CHAR(1 BYTE),
    "MANUAL_INFORM_SUPPLIER" CHAR(1 BYTE),
    "INFORM_COMPONENT" VARCHAR2(500 BYTE),
    "FROM_ORG_ID" VARCHAR2(32 BYTE),
    "TO_DEPOT_ID" VARCHAR2(32 BYTE),
    "TO_AREA_TYPE" VARCHAR2(32 BYTE),
    "CONFIRM_DEPT_ID" VARCHAR2(32 BYTE),
    "COLLECT_DEPOT_ID" VARCHAR2(32 BYTE),
    "COLLECT_AREA_TYPE" VARCHAR2(32 BYTE),
    "FROM_DEPT_ID" VARCHAR2(32 BYTE),
    "SUPPLIER_BIZ_NAME" VARCHAR2(100 BYTE),
    "CAN_BE_ORIGIN_RULE" CHAR(1 BYTE),
    "CUSTOM_NAME" VARCHAR2(100 BYTE),
	EXCESS_DELIVERY CHAR(1 BYTE),
	MULTI_DELIVERY CHAR(1 BYTE),
	"MANUAL_APPLY" CHAR(1 BYTE),
	"RULE_CODE" VARCHAR2(50 BYTE),
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "SPD_PREPARE_INFORM_RULE"  IS '备货通知业务规则表';

CREATE TABLE "SPD_CONSUME_RULE" 
   ("ID" VARCHAR2(32 BYTE),
    "NAME" VARCHAR(100 BYTE),
    "RULE_PRIOR" INTEGER,
    "DEPOT_ID" varchar2(32),
    "AREA_TYPE" varchar2(32),
    "USAGE" varchar2(50),
    "FEEDBACK_RULE_ID" VARCHAR2(32),
	"CREATE_TIME" DATE,  
    "LAST_UPDATE_TIME" DATE,
    "ENABLED" CHAR(1 BYTE),
    "CAN_BE_ORIGIN_RULE" CHAR(1 BYTE),
    "CUSTOM_NAME" VARCHAR2(100 BYTE),
    "MANUAL_APPLY" CHAR(1 BYTE),
    "RULE_CODE" VARCHAR2(50 BYTE),
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "SPD_CONSUME_RULE"  IS '消耗业务规则表';

CREATE TABLE "SPD_RETURN_GOODS_RULE" 
   ("ID" VARCHAR2(32 BYTE),
    "NAME" VARCHAR(100 BYTE),
    "RULE_PRIOR" INTEGER,
    "TO_ORG_ID" varchar2(32),
    "TO_DEPT_ID" varchar2(32),
    "FROM_DEPOT_ID" varchar2(32),
    "FROM_AREA_TYPE" varchar2(32),
    "FEEDBACK_RULE_ID" VARCHAR2(32),
    ORIGIN_RULE_ID VARCHAR2(32 BYTE),
    "MANUAL_RETURN_GOODS" char(1 BYTE),
    "RETURN_GOODS_COMPONENT" varchar2(300),
	"CREATE_TIME" DATE,  
    "LAST_UPDATE_TIME" DATE,
    "ENABLED" CHAR(1 BYTE),
    "CAN_BE_ORIGIN_RULE" CHAR(1 BYTE),
    "CUSTOM_NAME" VARCHAR2(100 BYTE),
    "MANUAL_APPLY" CHAR(1 BYTE),
    "RULE_CODE" VARCHAR2(50 BYTE),
	"AUTO_ASSIGN_RECEIVE" CHAR(1 BYTE) DEFAULT '0',
	 PRIMARY KEY ("ID")
   );
COMMENT ON TABLE "SPD_RETURN_GOODS_RULE"  IS '退货业务规则表';

CREATE TABLE PCS_ROLE_API
   (ID VARCHAR2(32 BYTE), 
	ROLE_ID VARCHAR2(32 BYTE) NOT NULL ENABLE, 
	URI VARCHAR2(100 BYTE),
	REQUEST_METHOD VARCHAR2(32 BYTE),
	CREATE_TIME DATE,
	LAST_UPDATE_TIME DATE,
	PRIMARY KEY (ID)
   ) ;
COMMENT ON TABLE PCS_ROLE_API  IS '角色权限资源';



