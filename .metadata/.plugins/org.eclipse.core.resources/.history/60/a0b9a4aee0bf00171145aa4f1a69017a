package cn.ak4j.yard.pcs.service;

import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.springframework.beans.factory.annotation.Autowired;

import cn.ak4j.exception.common.InvalidDataException;
import cn.ak4j.yard.BaseTest;
import cn.ak4j.yard.domain.MaintenanceInfo;
import cn.ak4j.yard.enums.PcsDeptType;
import cn.ak4j.yard.pcs.domain.PcsDept;
import cn.ak4j.yard.pcs.domain.PcsUser;
import cn.ak4j.yard.pcs.repository.PcsUserRepository;

public class PcsDeptServiceTest extends BaseTest{

	@Autowired private PcsDeptService deptService;
	@Autowired private PcsUserRepository userRepository;
	@Rule public ExpectedException thrown = ExpectedException.none();
	
	@Test public void testAddWithExistDeptCode(){
		PcsUser user = userRepository.findAll().findById(xykUserId);
		
		String deptCode = "dept_code_003";
		String deptName = "测试部门";
		
		PcsDept dept = buildDeptWithDeptCodeAndDeptName(deptCode, deptName, user);
		
		thrown.expect(InvalidDataException.class);
		deptService.add(dept, user);
	}
	
	@Test public void testAddWithExistDeptName(){
		PcsUser user = userRepository.findAll().findById(xykUserId);
		
		String deptCode = "9527";
		String deptName = "门诊药房";
		
		PcsDept dept = buildDeptWithDeptCodeAndDeptName(deptCode, deptName, user);
		
		thrown.expect(InvalidDataException.class);
		deptService.add(dept, user);
	}
	
	@Test public void testModifyWithExistDeptCode(){
		PcsUser user = userRepository.findAll().findById(xykUserId);
		
		String deptCode = "9527";
		String deptName = "测试部门";
		String existDeptCode = "dept_code_003";
		
		PcsDept dept = buildDeptWithDeptCodeAndDeptName(deptCode, deptName, user);
		
		dept = deptService.add(dept, user);
		dept.setDeptCode(existDeptCode);
		
		thrown.expect(InvalidDataException.class);
		deptService.modify(dept, user);
		
	}
	
	@Test public void testModifyWithExistDeptName(){
		PcsUser user = userRepository.findAll().findById(xykUserId);
		
		String deptCode = "9527";
		String deptName = "测试部门";
		String existDeptName = "雅和药房";
		
		PcsDept dept = buildDeptWithDeptCodeAndDeptName(deptCode, deptName, user);
		
		dept = deptService.add(dept, user);
		dept.setDeptName(existDeptName);
		
		thrown.expect(InvalidDataException.class);
		deptService.modify(dept, user);
	}
	
	private PcsDept buildDeptWithDeptCodeAndDeptName(String deptCode, String deptName, PcsUser user){
		PcsDept dept = new PcsDept();
		dept.setDeptCode(deptCode);
		dept.setDeptName(deptName);
		
		dept.setOrgId(orgId);
		dept.setParentId("-1");
		dept.setDeptType(PcsDeptType.depot_management.getCode());
		
		dept.setMaintenanceInfo(new MaintenanceInfo(user));
		
		return dept;
	}
}
